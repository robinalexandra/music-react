{"ast":null,"code":"var _jsxFileName = \"/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js\";\nimport React, { Component } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ResponsiveBubble } from '@nivo/circle-packing';\nimport './App.css'; /////////////////////////////////////////\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topGenres: [],\n      searchAll: \"\",\n      searchAllResult: [],\n      searchArtist1: \"\",\n      searchArtist1Result: [],\n      searchArtist2: \"\",\n      searchArtist2Result: [],\n      searchSongResult: []\n    };\n  } /////////////////////////////////////////\n\n\n  componentDidMount() {//this.getGenrePopularity(10);\n  }\n\n  getState() {\n    console.log(this.state);\n  }\n\n  searchArtistData() {\n    const searchedArtist = this.input.value.trim();\n    this.setState({\n      artist: searchedArtist\n    });\n    const request = `https://wasabi.i3s.unice.fr/api/v1/artist/name/${encodeURI(searchedArtist)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        artistData: data\n      });else this.setState({\n        artistData: {}\n      });\n      console.log(this.state.artistData);\n    });\n  }\n\n  getGenrePopularity(limit) {\n    let request = `https://wasabi.i3s.unice.fr/api/v1/artist/genres/popularity`;\n    if (limit) request += `?limit=${limit}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        topGenres: data\n      });else this.setState({\n        topGenres: {}\n      });\n      console.log(this.state.topGenres);\n    });\n    const chartData = this.state.topGenres;\n    const bubbles = {\n      _id: \"Genres\",\n      children: this.state.topGenres\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(ResponsiveBar, {\n      data: chartData,\n      indexBy: \"_id\",\n      keys: ['sum'],\n      layout: \"horizontal\",\n      margin: {\n        top: 50,\n        right: 50,\n        bottom: 50,\n        left: 150\n      },\n      colors: {\n        scheme: 'category10'\n      },\n      borderRadius: 10,\n      enableGridY: false,\n      axisBottom: null,\n      axisLeft: {\n        tickSize: 0,\n        tickPadding: 10\n      },\n      labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', '2']]\n      },\n      isInteractive: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(ResponsiveBubble, {\n      root: bubbles,\n      identity: \"_id\",\n      value: \"sum\",\n      leavesOnly: true,\n      padding: 5,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      colors: {\n        scheme: 'paired'\n      },\n      colorBy: \"name\",\n      labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', '2']]\n      },\n      labelSkipRadius: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  } /////////////////////////////////////////\n  // Requête sur l'API Wasabi : recherche d'artistes et chansons\n\n\n  getArtistOrSongBySearch(search) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        searchAllResult: data\n      });else this.setState({\n        searchAllResult: []\n      });\n      console.log(this.state.searchAllResult);\n    });\n  } // Requête sur l'API Wasabi : recherche d'artistes\n\n\n  getArtistBySearch(search, artistId) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      let searchResult;\n      if (data != null) searchResult = data.filter(option => !option.title);else searchResult = [];\n      if (artistId === \"artist1\") this.setState({\n        searchArtist1Result: searchResult\n      });else this.setState({\n        searchArtist2Result: searchResult\n      });\n    });\n  } // Requête sur l'API Wasabi : recherche de chansons\n\n\n  getSongBySearch(search, songId) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        searchAllResult: data\n      });else this.setState({\n        searchAllResult: []\n      });\n      console.log(this.state.searchAllResult);\n    });\n  } // Handler de la recherche d'artiste ou chanson (TextField onChange)\n\n\n  searchAll(e) {\n    const value = e.target.value.trim();\n    this.setState({\n      searchAll: value\n    }); //console.log(\"Search: \" + value)\n\n    if (value) this.getArtistOrSongBySearch(value);else this.setState({\n      searchAllResult: []\n    });\n  } // Handler de la recherche d'artiste (TextField onChange)\n\n\n  searchArtist(e, artistId) {\n    const value = e.target.value.trim();\n    if (artistId === \"artist1\") this.setState({\n      searchArtist1: value\n    });else this.setState({\n      searchArtist2: value\n    });\n    console.log(\"Search (\" + artistId + \"): \" + value);\n    if (value) this.getArtistBySearch(value, artistId);else {\n      if (artistId === \"artist1\") this.setState({\n        searchArtist1Result: []\n      });else this.setState({\n        searchArtist2Result: []\n      });\n      console.log(\"[]\");\n    }\n  } // Handler de la recherche de chanson (TextField onChange)\n\n  /*searchSong(searchAllRes) {\n  \tconst searchSongResult = []\n  \tfor(let i=0; i<searchAllRes.length; i++) {\n  \t\tif(searchAllRes[i].title) {\n  \t\t\tconsole.log(searchAllRes[i].title + \" (chanson) \" + searchAllRes[i].name + \" (artiste) \" + searchAllRes[i].albumTitle + \" (album)\")\n  \t\t\tsearchSongResult.push(searchAllRes[i])\n  \t\t}\n  \t}\n  \tconsole.log(searchSongResult)\n  }*/\n  // Gère l'affichage d'un élément suggéré (en paramètre)\n\n\n  searchOptionRendering(option, type) {\n    if (!type) {\n      if (option.title) return `${option.title} (chanson de ${option.name} de l'album ${option.albumTitle})`;else return `${option.name} (artiste)`;\n    } else if (type === \"artist\") return option.name;else if (type === \"song\") return option.title;\n  } // Handler de la sélection d'un élément suggéré\n\n\n  handleSearchOptionSelection(e, type) {\n    console.log(e.target.getParent());\n    let split;\n    const selection = e.target.textContent;\n\n    if (selection) {\n      if (!type) {\n        split = selection.split(\"(\");\n        if (split[1] === \"artiste)\") console.log(\"You've searched an artist: \" + split[0].trim());else console.log(\"You've searched a song: \" + split[0].trim());\n      } else if (type === \"artist\") console.log(\"You've searched an artist: \" + e.target.textContent);else if (type === \"song\") console.log(\"You've searched a song: \" + e.target.textContent);\n    }\n  } /////////////////////////////////////////\n\n\n  render() {\n    //console.log(this.state)\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: '500px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.getState.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Get state\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Chercher un artiste ou une chanson\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchAllResult.map(option => this.searchOptionRendering(option)),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"searchAllTextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Recherche\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchAll(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Comparer deux artistes\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchArtist1Result.map(option => this.searchOptionRendering(option, \"artist\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"artist\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"artist1TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Artiste #1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchArtist(e, \"artist1\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchArtist2Result.map(option => this.searchOptionRendering(option, \"artist\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"artist\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"artist2TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Artiste #2\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchArtist(e, \"artist2\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Comparer !\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js"],"names":["React","Component","TextField","Autocomplete","ResponsiveBar","ResponsiveBubble","App","constructor","props","state","topGenres","searchAll","searchAllResult","searchArtist1","searchArtist1Result","searchArtist2","searchArtist2Result","searchSongResult","componentDidMount","getState","console","log","searchArtistData","searchedArtist","input","value","trim","setState","artist","request","encodeURI","fetch","then","response","json","data","artistData","getGenrePopularity","limit","chartData","bubbles","_id","children","top","right","bottom","left","scheme","tickSize","tickPadding","from","modifiers","getArtistOrSongBySearch","search","getArtistBySearch","artistId","searchResult","filter","option","title","getSongBySearch","songId","e","target","searchArtist","searchOptionRendering","type","name","albumTitle","handleSearchOptionSelection","getParent","split","selection","textContent","render","height","bind","map","options","params","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveBubble } from '@nivo/circle-packing'\n\nimport './App.css'\n\n/////////////////////////////////////////\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\n\t\t\ttopGenres: [],\n\n\t\t\tsearchAll: \"\",\n\t\t\tsearchAllResult: [],\n\n\t\t\tsearchArtist1: \"\",\n\t\t\tsearchArtist1Result: [],\n\n\t\t\tsearchArtist2: \"\",\n\t\t\tsearchArtist2Result: [],\n\t\t\t\n\t\t\tsearchSongResult: []\n\t\t}\n\t}\n\n\t/////////////////////////////////////////\n\n\tcomponentDidMount() {\n\t\t//this.getGenrePopularity(10);\n\t}\n\n\tgetState() {\n\t\tconsole.log(this.state)\n\t}\n\n\tsearchArtistData() {\n\t\tconst searchedArtist = this.input.value.trim()\n\t\tthis.setState({ artist: searchedArtist })\n\n\t\tconst request = `https://wasabi.i3s.unice.fr/api/v1/artist/name/${encodeURI(searchedArtist)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ artistData: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ artistData: {} })\n\t\t\t\tconsole.log(this.state.artistData)\n\t\t\t})\n\t}\n\n\tgetGenrePopularity(limit) {\n\t\tlet request = `https://wasabi.i3s.unice.fr/api/v1/artist/genres/popularity`\n\t\tif(limit)\n\t\t\trequest += `?limit=${limit}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ topGenres: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ topGenres: {} })\n\t\t\t\tconsole.log(this.state.topGenres)\n\t\t\t})\n\t\t\n\t\tconst chartData = this.state.topGenres\n\t\tconst bubbles = {\n\t\t\t_id: \"Genres\",\n\t\t\tchildren: this.state.topGenres\n\t\t}\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<ResponsiveBar\n\t\t\t\t\tdata={chartData}\n\t\t\t\t\tindexBy=\"_id\"\n\t\t\t\t\tkeys={[ 'sum' ]}\n\t\t\t\t\tlayout=\"horizontal\"\n\t\t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 150 }}\n\t\t\t\t\tcolors={{ scheme: 'category10' }}\n\t\t\t\t\tborderRadius={10}\n\t\t\t\t\tenableGridY={false}\n\t\t\t\t\taxisBottom={null}\n\t\t\t\t\taxisLeft={{\n\t\t\t\t\t\ttickSize: 0,\n\t\t\t\t\t\ttickPadding: 10\n\t\t\t\t\t}}\n\t\t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n\t\t\t\t\tisInteractive={false}\n\t\t\t\t/>\n\t\t\t\t<ResponsiveBubble\n\t\t\t\t\troot={bubbles}\n\t\t\t\t\tidentity=\"_id\"\n\t\t\t\t\tvalue=\"sum\"\n\t\t\t\t\tleavesOnly={true}\n\t\t\t\t\tpadding={5}\n\t\t\t\t\tmargin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n\t\t\t\t\tcolors={{ scheme: 'paired' }}\n\t\t\t\t\tcolorBy='name'\n\t\t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n\t\t\t\t\tlabelSkipRadius={0}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t/////////////////////////////////////////\n\n\t// Requête sur l'API Wasabi : recherche d'artistes et chansons\n\tgetArtistOrSongBySearch(search) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ searchAllResult: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchAllResult: [] })\n\t\t\t\tconsole.log(this.state.searchAllResult)\n\t\t\t})\n\t}\n\n\t// Requête sur l'API Wasabi : recherche d'artistes\n\tgetArtistBySearch(search, artistId) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tlet searchResult\n\t\t\t\tif(data != null)\n\t\t\t\t\tsearchResult = data.filter(option => !option.title)\n\t\t\t\telse\n\t\t\t\t\tsearchResult = []\n\t\t\t\tif(artistId === \"artist1\")\n\t\t\t\t\tthis.setState({ searchArtist1Result: searchResult })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchArtist2Result: searchResult })\n\t\t\t})\n\t}\n\n\t// Requête sur l'API Wasabi : recherche de chansons\n\tgetSongBySearch(search, songId) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ searchAllResult: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchAllResult: [] })\n\t\t\t\tconsole.log(this.state.searchAllResult)\n\t\t\t})\n\t}\n\n\t// Handler de la recherche d'artiste ou chanson (TextField onChange)\n\tsearchAll(e) {\n\t\tconst value = e.target.value.trim()\n\t\tthis.setState({ searchAll: value })\n\t\t//console.log(\"Search: \" + value)\n\t\tif(value)\n\t\t\tthis.getArtistOrSongBySearch(value)\n\t\telse\n\t\t\tthis.setState({ searchAllResult: [] })\n\t}\n\n\t// Handler de la recherche d'artiste (TextField onChange)\n\tsearchArtist(e, artistId) {\n\t\tconst value = e.target.value.trim()\n\t\tif(artistId === \"artist1\")\n\t\t\tthis.setState({ searchArtist1: value })\n\t\telse\n\t\t\tthis.setState({ searchArtist2: value })\n\t\tconsole.log(\"Search (\" + artistId + \"): \" + value)\n\t\tif(value)\n\t\t\tthis.getArtistBySearch(value, artistId)\n\t\telse {\n\t\t\tif(artistId === \"artist1\")\n\t\t\t\tthis.setState({ searchArtist1Result: [] })\n\t\t\telse\n\t\t\t\tthis.setState({ searchArtist2Result: [] })\n\t\t\tconsole.log(\"[]\")\n\t\t}\n\t}\n\n\t// Handler de la recherche de chanson (TextField onChange)\n\t/*searchSong(searchAllRes) {\n\t\tconst searchSongResult = []\n\t\tfor(let i=0; i<searchAllRes.length; i++) {\n\t\t\tif(searchAllRes[i].title) {\n\t\t\t\tconsole.log(searchAllRes[i].title + \" (chanson) \" + searchAllRes[i].name + \" (artiste) \" + searchAllRes[i].albumTitle + \" (album)\")\n\t\t\t\tsearchSongResult.push(searchAllRes[i])\n\t\t\t}\n\t\t}\n\t\tconsole.log(searchSongResult)\n\t}*/\n\n\t// Gère l'affichage d'un élément suggéré (en paramètre)\n\tsearchOptionRendering(option, type) {\n\t\tif(!type) {\n\t\t\tif(option.title)\n\t\t\t\treturn `${option.title} (chanson de ${option.name} de l'album ${option.albumTitle})`\n\t\t\telse\n\t\t\t\treturn `${option.name} (artiste)`\n\t\t} \n\t\telse if(type === \"artist\")\n\t\t\treturn option.name\n\t\telse if(type === \"song\")\n\t\t\treturn option.title\n\t}\n\n\t// Handler de la sélection d'un élément suggéré\n\thandleSearchOptionSelection(e, type) {\n\t\tconsole.log(e.target.getParent())\n\t\tlet split\n\t\tconst selection = e.target.textContent\n\t\tif(selection) {\n\t\t\tif(!type) {\n\t\t\t\tsplit = selection.split(\"(\")\n\t\t\t\tif(split[1] === \"artiste)\")\n\t\t\t\t\tconsole.log(\"You've searched an artist: \" + split[0].trim())\n\t\t\t\telse\n\t\t\t\t\tconsole.log(\"You've searched a song: \" + split[0].trim())\n\t\t\t}\n\t\t\telse if(type === \"artist\")\n\t\t\t\tconsole.log(\"You've searched an artist: \" + e.target.textContent)\n\t\t\telse if(type === \"song\")\n\t\t\t\tconsole.log(\"You've searched a song: \" + e.target.textContent)\n\t\t}\n\t}\n\n\t/////////////////////////////////////////\n\n\trender() {\n\n\t\t//console.log(this.state)\n\n\t\treturn (\n\t\t\t<div className=\"App\" style={{ height : '500px' }}>\n\t\t\t\t\n\t\t\t\t<button onClick={ this.getState.bind(this) }>Get state</button>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Chercher un artiste ou une chanson</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchAllResult.map(option => this.searchOptionRendering(option)) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e) }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"searchAllTextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Recherche\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchAll(e) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Comparer deux artistes</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchArtist1Result.map(option => this.searchOptionRendering(option, \"artist\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"artist\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"artist1TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Artiste #1\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchArtist(e, \"artist1\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchArtist2Result.map(option => this.searchOptionRendering(option, \"artist\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"artist\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"artist2TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Artiste #2\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchArtist(e, \"artist2\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<button>Comparer !</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}