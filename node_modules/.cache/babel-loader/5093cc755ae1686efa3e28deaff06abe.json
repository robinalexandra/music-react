{"ast":null,"code":"var _jsxFileName = \"/Users/robina/Documents/MIAGE/React/restaurants/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { withStyles, fade } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    marginTop: theme.spacing(5)\n  },\n  tableTitle: {\n    padding: theme.spacing(2)\n  },\n  buttonGroup: {\n    margin: theme.spacing(2)\n  },\n  textButton: {\n    margin: theme.spacing(1)\n  }\n});\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      restaurantList: [],\n      page: 1,\n      rowsPerPage: 10\n    };\n\n    this.getRestaurantData = async () => {\n      const _this$state = this.state,\n            page = _this$state.page,\n            rowsPerPage = _this$state.rowsPerPage;\n      const request = \"http://localhost:8080/api/restaurants?page=\".concat(page, \"&pagesize=\").concat(rowsPerPage);\n      console.log(request);\n      const response = await fetch(request);\n\n      const _ref = await response.json(),\n            data = _ref.data;\n\n      this.setState({\n        restaurantList: data\n      });\n    };\n\n    this.handleNextPage = event => {\n      const newPage = this.state.page++;\n      console.log(newPage);\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        page: 1,\n        rowsPerPage: +event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getRestaurantData();\n  }\n  /*componentDidUpdate(prevState) {\n  \tif(this.state.page !== prevState.page || this.state.rowsPerPage !== prevState.rowsPerPage) {\n  \t\tthis.getRestaurantData();\n  \t}\n  }*/\n\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      color: \"primary\",\n      className: classes.tableTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Restaurants\"), React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Cuisine\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Borough\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Address\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.restaurantList.map((restaurant, key) => React.createElement(TableRow, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, restaurant.name), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, restaurant.cuisine), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, restaurant.borough), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, restaurant.address.building, \" \", restaurant.address.street, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \"New York, NY \", restaurant.address.zipcode))))), React.createElement(ButtonGroup, {\n      className: classes.buttonGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(FirstPageIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(NavigateBeforeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Button, {\n      disabled: true,\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.page, \" sur X\"), React.createElement(IconButton, {\n      onClick: handleNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(NavigateNextIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(LastPageIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/robina/Documents/MIAGE/React/restaurants/src/App.js"],"names":["React","withStyles","fade","Table","TableBody","TableCell","TableHead","TableRow","Typography","Paper","Container","Button","ButtonGroup","IconButton","FirstPageIcon","NavigateBeforeIcon","NavigateNextIcon","LastPageIcon","styles","theme","root","flexGrow","container","marginTop","spacing","tableTitle","padding","buttonGroup","margin","textButton","App","Component","state","restaurantList","page","rowsPerPage","getRestaurantData","request","console","log","response","fetch","json","data","setState","handleNextPage","event","newPage","handleChangeRowsPerPage","target","value","componentDidMount","render","classes","props","map","restaurant","key","name","cuisine","borough","address","building","street","zipcode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { withStyles, fade } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst styles = theme => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tcontainer: {\n\t\tmarginTop: theme.spacing(5),\n\t},\n\ttableTitle: {\n\t\tpadding: theme.spacing(2),\n\t},\n\tbuttonGroup: {\n\t\tmargin: theme.spacing(2),\n\t},\n\ttextButton: {\n\t\tmargin: theme.spacing(1),\n\t},\n});\n\nclass App extends React.Component {\n\n\tstate = {\n\t\trestaurantList: [],\n\t\tpage: 1,\n\t\trowsPerPage: 10,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getRestaurantData();\n\t}\n\n\t/*componentDidUpdate(prevState) {\n\t\tif(this.state.page !== prevState.page || this.state.rowsPerPage !== prevState.rowsPerPage) {\n\t\t\tthis.getRestaurantData();\n\t\t}\n\t}*/\n\n\tgetRestaurantData = async () => {\n\t\tconst { page, rowsPerPage } = this.state;\n\t\tconst request = `http://localhost:8080/api/restaurants?page=${page}&pagesize=${rowsPerPage}`;\n\t\tconsole.log(request);\n\t\tconst response = await fetch(request);\n\t\tconst { data } = await response.json();\n\t\tthis.setState({ restaurantList : data })\n\t}\n\n\thandleNextPage = event => {\n\t\tconst newPage = this.state.page++;\n\t\tconsole.log(newPage);\n\t\tthis.setState({page: newPage});\n\t};\n\n\thandleChangeRowsPerPage = event => {\n\t\tthis.setState({page: 1, rowsPerPage: +event.target.value});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Container className={classes.container}>\n\t\t\t\t\t<Paper>\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h6\" color=\"primary\" className={classes.tableTitle}>Restaurants</Typography>\n\t\t\t\t\t\t<Table aria-label=\"simple table\">\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<TableCell>Name</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Cuisine</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Borough</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Address</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{this.state.restaurantList.map((restaurant, key) => (\n\t\t\t\t\t\t\t\t\t<TableRow key={key}>\n\t\t\t\t\t\t\t\t\t<TableCell>{restaurant.name}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{restaurant.cuisine}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{restaurant.borough}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{restaurant.address.building} {restaurant.address.street}<br />New York, NY {restaurant.address.zipcode}</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t<ButtonGroup className={classes.buttonGroup}>\n\t\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t\t<FirstPageIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t\t<NavigateBeforeIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Button disabled variant=\"text\">{this.state.page} sur X</Button>\n\t\t\t\t\t\t\t<IconButton onClick={handleNextPage}>\n\t\t\t\t\t\t\t\t<NavigateNextIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t\t<LastPageIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\n\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}