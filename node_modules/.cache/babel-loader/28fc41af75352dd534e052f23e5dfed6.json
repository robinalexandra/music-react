{"ast":null,"code":"var _jsxFileName = \"/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab'; //import { ResponsiveBar } from '@nivo/bar'\n//import { ResponsiveBubble } from '@nivo/circle-packing'\n//import { Chart } from \"react-google-charts\";\n\nimport './App.css'; //////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////  STYLES  ////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\nconst styles = theme => ({\n  title: {},\n  button: {\n    margin: 50\n  }\n}); //////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////  APP  /////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topGenres: [],\n      searchAllInput: \"\",\n      searchAllResult: [],\n      searchAllSelection: null,\n      searchArtist1Input: \"\",\n      searchArtist1Result: [],\n      searchArtist1Selection: null,\n      searchArtist2Input: \"\",\n      searchArtist2Result: [],\n      searchArtist2Selection: null,\n      searchSong1Input: \"\",\n      searchSong1Result: [],\n      searchSong1Selection: null,\n      searchSong2Input: \"\",\n      searchSong2Result: [],\n      searchSong2Selection: null\n    };\n  } /////////////////////////////////////////\n\n\n  componentDidMount() {//this.getGenrePopularity(10);\n  }\n\n  searchArtistData() {\n    const searchedArtist = this.input.value.trim();\n    this.setState({\n      artist: searchedArtist\n    });\n    const request = `https://wasabi.i3s.unice.fr/api/v1/artist/name/${encodeURI(searchedArtist)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        artistData: data\n      });else this.setState({\n        artistData: {}\n      });\n      console.log(this.state.artistData);\n    });\n  }\n  /*getGenrePopularity(limit) {\n  \tlet request = `https://wasabi.i3s.unice.fr/api/v1/artist/genres/popularity`\n  \tif(limit)\n  \t\trequest += `?limit=${limit}`\n  \tconsole.log(request)\n  \t\tfetch(request)\n  \t\t.then((response) => {\n  \t\t\treturn response.json()\n  \t\t})\n  \t\t.then((data) => {\n  \t\t\tif(data != null)\n  \t\t\t\tthis.setState({ topGenres: data })\n  \t\t\telse\n  \t\t\t\tthis.setState({ topGenres: {} })\n  \t\t\tconsole.log(this.state.topGenres)\n  \t\t})\n  \t\n  \tconst chartData = this.state.topGenres\n  \tconst bubbles = {\n  \t\t_id: \"Genres\",\n  \t\tchildren: this.state.topGenres\n  \t}\n  \t\treturn(\n  \t\t<div>\n  \t\t\t<ResponsiveBar\n  \t\t\t\tdata={chartData}\n  \t\t\t\tindexBy=\"_id\"\n  \t\t\t\tkeys={[ 'sum' ]}\n  \t\t\t\tlayout=\"horizontal\"\n  \t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 150 }}\n  \t\t\t\tcolors={{ scheme: 'category10' }}\n  \t\t\t\tborderRadius={10}\n  \t\t\t\tenableGridY={false}\n  \t\t\t\taxisBottom={null}\n  \t\t\t\taxisLeft={{\n  \t\t\t\t\ttickSize: 0,\n  \t\t\t\t\ttickPadding: 10\n  \t\t\t\t}}\n  \t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n  \t\t\t\tisInteractive={false}\n  \t\t\t/>\n  \t\t\t<ResponsiveBubble\n  \t\t\t\troot={bubbles}\n  \t\t\t\tidentity=\"_id\"\n  \t\t\t\tvalue=\"sum\"\n  \t\t\t\tleavesOnly={true}\n  \t\t\t\tpadding={5}\n  \t\t\t\tmargin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n  \t\t\t\tcolors={{ scheme: 'paired' }}\n  \t\t\t\tcolorBy='name'\n  \t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n  \t\t\t\tlabelSkipRadius={0}\n  \t\t\t/>\n  \t\t</div>\n  \t)\n  }*/\n\n\n  getState() {\n    console.log(this.state);\n  } //////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////  REQUESTS  ///////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////\n  // Requête : recherche d'artistes et chansons\n\n\n  getArtistOrSongBySearch(search) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        searchAllResult: data\n      });else this.setState({\n        searchAllResult: []\n      });\n      console.log(this.state.searchAllResult);\n    });\n  } // Requête : recherche d'artistes\n\n\n  getArtistBySearch(search, artistId) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      let searchResult;\n      if (data != null) searchResult = data.filter(option => !option.title);else searchResult = [];\n      if (artistId === \"artist1\") this.setState({\n        searchArtist1Result: searchResult\n      });else this.setState({\n        searchArtist2Result: searchResult\n      });\n    });\n  } // Requête : recherche de chansons\n\n\n  getSongBySearch(search, songId) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      let searchResult;\n      if (data != null) searchResult = data.filter(option => option.title);else searchResult = [];\n      if (songId === \"song1\") this.setState({\n        searchSong1Result: searchResult\n      });else this.setState({\n        searchSong2Result: searchResult\n      });\n    });\n  } // Requête : recherche d'un artiste par son nom\n\n\n  getArtistByName(name) {\n    const request = `https://wasabi.i3s.unice.fr/api/v1/artist_all/name/${encodeURI(name)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n    });\n  } //////////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////  HANDLERS  ///////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////\n  // Handler de la recherche d'artiste ou chanson (TextField onChange)\n\n\n  searchAll(e) {\n    const value = e.target.value.trim();\n    this.setState({\n      searchAllInput: value\n    });\n    console.log(\"Search: \" + value);\n    if (value) this.getArtistOrSongBySearch(value);else this.setState({\n      searchAllResult: []\n    });\n  } // Handler de la recherche d'artiste (TextField onChange)\n\n\n  searchArtist(e, artistId) {\n    const value = e.target.value.trim();\n    if (artistId === \"artist1\") this.setState({\n      searchArtist1Input: value\n    });else this.setState({\n      searchArtist2Input: value\n    });\n    console.log(\"Search (\" + artistId + \"): \" + value);\n    if (value) this.getArtistBySearch(value, artistId);else {\n      if (artistId === \"artist1\") this.setState({\n        searchArtist1Result: []\n      });else this.setState({\n        searchArtist2Result: []\n      });\n      console.log(\"[]\");\n    }\n  } // Handler de la recherche de chanson (TextField onChange)\n\n\n  searchSong(e, songId) {\n    const value = e.target.value.trim();\n    if (songId === \"song1\") this.setState({\n      searchSong1Input: value\n    });else this.setState({\n      searchSong2Input: value\n    });\n    console.log(\"Search (\" + songId + \"): \" + value);\n    if (value) this.getSongBySearch(value, songId);else {\n      if (songId === \"song1\") this.setState({\n        searchSong1Result: []\n      });else this.setState({\n        searchSong2Result: []\n      });\n      console.log(\"[]\");\n    }\n  } // Gère l'affichage d'un élément suggéré (en paramètre)\n\n\n  searchOptionRendering(option, type) {\n    if (type === \"artist\") return option.name;\n    if (option.title) return `${option.title} (chanson de ${option.name} de l'album ${option.albumTitle})`;else return `${option.name} (artiste)`;\n  } // Handler de la sélection d'un élément suggéré\n\n\n  handleSearchOptionSelection(e, field, type) {\n    //console.log(e.target)\n    const selection = e.target.textContent; //console.log(selection)\n\n    if (selection) {\n      if (!type) {\n        let split = selection.split(\"(\");\n        let value = split[0].trim();\n        this.setState({\n          searchAllSelection: value\n        });\n        if (split[1] === \"artiste)\") console.log(\"You've searched an artist: \" + value);else console.log(\"You've searched a song: \" + value);\n      } else {\n        let value = e.target.textContent;\n\n        switch (field) {\n          case \"artist1\":\n            this.setState({\n              searchArtist1Selection: value\n            });\n            break;\n\n          case \"artist2\":\n            this.setState({\n              searchArtist2Selection: value\n            });\n            break;\n\n          case \"song1\":\n            this.setState({\n              searchSong1Selection: value\n            });\n            break;\n\n          case \"song2\":\n            this.setState({\n              searchSong2Selection: value\n            });\n            break;\n\n          default:\n        }\n\n        if (type === \"artist\") console.log(\"You've searched an artist: \" + value);else if (type === \"song\") console.log(\"You've searched a song: \" + value);\n      }\n    } else {\n      switch (field) {\n        case \"artist1\":\n          this.setState({\n            searchArtist1Input: \"\"\n          });\n          this.setState({\n            searchArtist1Result: []\n          });\n          this.setState({\n            searchArtist1Selection: null\n          });\n          break;\n\n        case \"artist2\":\n          this.setState({\n            searchArtist2Input: \"\"\n          });\n          this.setState({\n            searchArtist2Result: []\n          });\n          this.setState({\n            searchArtist2Selection: null\n          });\n          break;\n\n        case \"song1\":\n          this.setState({\n            searchSong1Input: \"\"\n          });\n          this.setState({\n            searchSong1Result: []\n          });\n          this.setState({\n            searchSong1Selection: null\n          });\n          break;\n\n        case \"song2\":\n          this.setState({\n            searchSong2Input: \"\"\n          });\n          this.setState({\n            searchSong2Result: []\n          });\n          this.setState({\n            searchSong2Selection: null\n          });\n          break;\n\n        default:\n          this.setState({\n            searchAllInput: \"\"\n          });\n          this.setState({\n            searchAllResult: []\n          });\n          this.setState({\n            searchAllSelection: null\n          });\n      }\n    }\n  } // Handler\n\n\n  handleCompareButtonClick(e, type) {\n    if (type === \"artist\") {\n      let artist1 = this.state.searchArtist1Selection;\n      let artist2 = this.state.searchArtist2Selection;\n\n      if (artist1 && artist2) {\n        console.log(artist1 + \" & \" + artist2);\n\n        if (artist1 === artist2) {\n          console.log(\"you want to compare the same artists\");\n        } else {\n          this.getArtistByName(artist1);\n          this.getArtistByName(artist2);\n        }\n      } else {\n        console.log(\"missing 1 artist at least\");\n      }\n    } else {\n      let song1 = this.state.searchSong1Selection;\n      let song2 = this.state.searchSong2Selection;\n\n      if (song1 && song2) {\n        console.log(song1 + \" & \" + song2);\n\n        if (song1 === song2) {\n          console.log(\"you want to compare the same songs\");\n        } else {\n          //this.getSongByName(song1)\n          //this.getSongByName(song2)\n          console.log(\"TODO\");\n        }\n      } else {\n        console.log(\"missing 1 song at least\");\n      }\n    }\n  } //////////////////////////////////////////////////////////////////////////////////\n  ////////////////////////////////////  RENDER  ////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: '500px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Material-UI\"))), React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: this.getState.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Get state\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"Chercher un artiste ou une chanson\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchAllResult.map(option => this.searchOptionRendering(option)),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"searchAllTextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Recherche\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchAll(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"Comparer deux artistes\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchArtist1Result.map(option => this.searchOptionRendering(option, \"artist\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"artist1\", \"artist\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"searchArtist1TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Artiste #1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchArtist(e, \"artist1\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchArtist2Result.map(option => this.searchOptionRendering(option, \"artist\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"artist2\", \"artist\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"searchArtist2TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Artiste #2\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchArtist(e, \"artist2\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: e => this.handleCompareButtonClick(e, \"artist\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, \"Comparer\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      id: \"compareArtistsChart\",\n      chartType: \"BarChart\",\n      data: [[\"Age\", \"Weight\"], [4, 5.5], [8, 12]],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, \"Comparer deux chansons\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchSong1Result.map(option => this.searchOptionRendering(option, \"song\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"song1\", \"song\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"searchSong1TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Chanson #1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchSong(e, \"song1\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchSong2Result.map(option => this.searchOptionRendering(option, \"song\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"song2\", \"song\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"searchSong2TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Chanson #2\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchSong(e, \"song2\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: e => this.handleCompareButtonClick(e, \"song\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, \"Comparer\")));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js"],"names":["React","Component","withStyles","TextField","Button","AppBar","Toolbar","Typography","Autocomplete","styles","theme","title","button","margin","App","constructor","props","state","topGenres","searchAllInput","searchAllResult","searchAllSelection","searchArtist1Input","searchArtist1Result","searchArtist1Selection","searchArtist2Input","searchArtist2Result","searchArtist2Selection","searchSong1Input","searchSong1Result","searchSong1Selection","searchSong2Input","searchSong2Result","searchSong2Selection","componentDidMount","searchArtistData","searchedArtist","input","value","trim","setState","artist","request","encodeURI","console","log","fetch","then","response","json","data","artistData","getState","getArtistOrSongBySearch","search","getArtistBySearch","artistId","searchResult","filter","option","getSongBySearch","songId","getArtistByName","name","searchAll","e","target","searchArtist","searchSong","searchOptionRendering","type","albumTitle","handleSearchOptionSelection","field","selection","textContent","split","handleCompareButtonClick","artist1","artist2","song1","song2","render","classes","height","bind","map","options","params","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { TextField, Button, AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n\n//import { ResponsiveBar } from '@nivo/bar'\n//import { ResponsiveBubble } from '@nivo/circle-packing'\n\n//import { Chart } from \"react-google-charts\";\n\nimport './App.css'\n\n//////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////  STYLES  ////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\nconst styles = theme => ({\n\ttitle: {},\n\tbutton: {\n\t\tmargin: 50\n\t}\n})\n\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////  APP  /////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\n\t\t\ttopGenres: [],\n\t\t\t\n\t\t\tsearchAllInput: \"\",\n\t\t\tsearchAllResult: [],\n\t\t\tsearchAllSelection: null,\n\n\t\t\tsearchArtist1Input: \"\",\n\t\t\tsearchArtist1Result: [],\n\t\t\tsearchArtist1Selection: null,\n\n\t\t\tsearchArtist2Input: \"\",\n\t\t\tsearchArtist2Result: [],\n\t\t\tsearchArtist2Selection: null,\n\n\t\t\tsearchSong1Input: \"\",\n\t\t\tsearchSong1Result: [],\n\t\t\tsearchSong1Selection: null,\n\n\t\t\tsearchSong2Input: \"\",\n\t\t\tsearchSong2Result: [],\n\t\t\tsearchSong2Selection: null,\n\t\t}\n\t}\n\n\t/////////////////////////////////////////\n\n\tcomponentDidMount() {\n\t\t//this.getGenrePopularity(10);\n\t}\n\n\tsearchArtistData() {\n\t\tconst searchedArtist = this.input.value.trim()\n\t\tthis.setState({ artist: searchedArtist })\n\n\t\tconst request = `https://wasabi.i3s.unice.fr/api/v1/artist/name/${encodeURI(searchedArtist)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ artistData: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ artistData: {} })\n\t\t\t\tconsole.log(this.state.artistData)\n\t\t\t})\n\t}\n\n\t/*getGenrePopularity(limit) {\n\t\tlet request = `https://wasabi.i3s.unice.fr/api/v1/artist/genres/popularity`\n\t\tif(limit)\n\t\t\trequest += `?limit=${limit}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ topGenres: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ topGenres: {} })\n\t\t\t\tconsole.log(this.state.topGenres)\n\t\t\t})\n\t\t\n\t\tconst chartData = this.state.topGenres\n\t\tconst bubbles = {\n\t\t\t_id: \"Genres\",\n\t\t\tchildren: this.state.topGenres\n\t\t}\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<ResponsiveBar\n\t\t\t\t\tdata={chartData}\n\t\t\t\t\tindexBy=\"_id\"\n\t\t\t\t\tkeys={[ 'sum' ]}\n\t\t\t\t\tlayout=\"horizontal\"\n\t\t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 150 }}\n\t\t\t\t\tcolors={{ scheme: 'category10' }}\n\t\t\t\t\tborderRadius={10}\n\t\t\t\t\tenableGridY={false}\n\t\t\t\t\taxisBottom={null}\n\t\t\t\t\taxisLeft={{\n\t\t\t\t\t\ttickSize: 0,\n\t\t\t\t\t\ttickPadding: 10\n\t\t\t\t\t}}\n\t\t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n\t\t\t\t\tisInteractive={false}\n\t\t\t\t/>\n\t\t\t\t<ResponsiveBubble\n\t\t\t\t\troot={bubbles}\n\t\t\t\t\tidentity=\"_id\"\n\t\t\t\t\tvalue=\"sum\"\n\t\t\t\t\tleavesOnly={true}\n\t\t\t\t\tpadding={5}\n\t\t\t\t\tmargin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n\t\t\t\t\tcolors={{ scheme: 'paired' }}\n\t\t\t\t\tcolorBy='name'\n\t\t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n\t\t\t\t\tlabelSkipRadius={0}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}*/\n\n\n\tgetState() {\n\t\tconsole.log(this.state)\n\t}\n\n\t//////////////////////////////////////////////////////////////////////////////////\n\t///////////////////////////////////  REQUESTS  ///////////////////////////////////\n\t//////////////////////////////////////////////////////////////////////////////////\n\n\t// Requête : recherche d'artistes et chansons\n\tgetArtistOrSongBySearch(search) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ searchAllResult: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchAllResult: [] })\n\t\t\t\tconsole.log(this.state.searchAllResult)\n\t\t\t})\n\t}\n\n\t// Requête : recherche d'artistes\n\tgetArtistBySearch(search, artistId) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tlet searchResult\n\t\t\t\tif(data != null)\n\t\t\t\t\tsearchResult = data.filter(option => !option.title)\n\t\t\t\telse\n\t\t\t\t\tsearchResult = []\n\t\t\t\tif(artistId === \"artist1\")\n\t\t\t\t\tthis.setState({ searchArtist1Result: searchResult })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchArtist2Result: searchResult })\n\t\t\t})\n\t}\n\n\t// Requête : recherche de chansons\n\tgetSongBySearch(search, songId) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tlet searchResult\n\t\t\t\tif(data != null)\n\t\t\t\t\tsearchResult = data.filter(option => option.title)\n\t\t\t\telse\n\t\t\t\t\tsearchResult = []\n\t\t\t\tif(songId === \"song1\")\n\t\t\t\t\tthis.setState({ searchSong1Result: searchResult })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchSong2Result: searchResult })\n\t\t\t})\n\t}\n\n\t// Requête : recherche d'un artiste par son nom\n\tgetArtistByName(name) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/api/v1/artist_all/name/${encodeURI(name)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data)\n\t\t\t})\n\t}\n\n//////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////  HANDLERS  ///////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\n\t// Handler de la recherche d'artiste ou chanson (TextField onChange)\n\tsearchAll(e) {\n\t\tconst value = e.target.value.trim()\n\t\tthis.setState({ searchAllInput: value })\n\t\tconsole.log(\"Search: \" + value)\n\t\tif(value)\n\t\t\tthis.getArtistOrSongBySearch(value)\n\t\telse\n\t\t\tthis.setState({ searchAllResult: [] })\n\t}\n\n\t// Handler de la recherche d'artiste (TextField onChange)\n\tsearchArtist(e, artistId) {\n\t\tconst value = e.target.value.trim()\n\t\tif(artistId === \"artist1\")\n\t\t\tthis.setState({ searchArtist1Input: value })\n\t\telse\n\t\t\tthis.setState({ searchArtist2Input: value })\n\t\tconsole.log(\"Search (\" + artistId + \"): \" + value)\n\t\tif(value)\n\t\t\tthis.getArtistBySearch(value, artistId)\n\t\telse {\n\t\t\tif(artistId === \"artist1\")\n\t\t\t\tthis.setState({ searchArtist1Result: [] })\n\t\t\telse\n\t\t\t\tthis.setState({ searchArtist2Result: [] })\n\t\t\tconsole.log(\"[]\")\n\t\t}\n\t}\n\n\t// Handler de la recherche de chanson (TextField onChange)\n\tsearchSong(e, songId) {\n\t\tconst value = e.target.value.trim()\n\t\tif(songId === \"song1\")\n\t\t\tthis.setState({ searchSong1Input: value })\n\t\telse\n\t\t\tthis.setState({ searchSong2Input: value })\n\t\tconsole.log(\"Search (\" + songId + \"): \" + value)\n\t\tif(value)\n\t\t\tthis.getSongBySearch(value, songId)\n\t\telse {\n\t\t\tif(songId === \"song1\")\n\t\t\t\tthis.setState({ searchSong1Result: [] })\n\t\t\telse\n\t\t\t\tthis.setState({ searchSong2Result: [] })\n\t\t\tconsole.log(\"[]\")\n\t\t}\n\t}\n\n\t// Gère l'affichage d'un élément suggéré (en paramètre)\n\tsearchOptionRendering(option, type) {\n\t\tif(type === \"artist\")\n\t\t\treturn option.name\n\t\tif(option.title)\n\t\t\treturn `${option.title} (chanson de ${option.name} de l'album ${option.albumTitle})`\n\t\telse\n\t\t\treturn `${option.name} (artiste)`\n\t}\n\n\t// Handler de la sélection d'un élément suggéré\n\thandleSearchOptionSelection(e, field, type) {\n\t\t//console.log(e.target)\n\t\tconst selection = e.target.textContent\n\t\t//console.log(selection)\n\t\tif(selection) {\n\t\t\tif(!type) {\n\t\t\t\tlet split = selection.split(\"(\")\n\t\t\t\tlet value = split[0].trim()\n\t\t\t\tthis.setState({ searchAllSelection: value })\n\t\t\t\tif(split[1] === \"artiste)\")\n\t\t\t\t\tconsole.log(\"You've searched an artist: \" + value)\n\t\t\t\telse\n\t\t\t\t\tconsole.log(\"You've searched a song: \" + value)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet value = e.target.textContent\n\t\t\t\tswitch(field) {\n\t\t\t\t\tcase \"artist1\":\n\t\t\t\t\t\tthis.setState({ searchArtist1Selection: value })\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"artist2\":\n\t\t\t\t\t\tthis.setState({ searchArtist2Selection: value })\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"song1\":\n\t\t\t\t\t\tthis.setState({ searchSong1Selection: value })\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"song2\":\n\t\t\t\t\t\tthis.setState({ searchSong2Selection: value })\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t\tif(type === \"artist\")\n\t\t\t\t\tconsole.log(\"You've searched an artist: \" + value)\n\t\t\t\telse if(type === \"song\")\n\t\t\t\t\tconsole.log(\"You've searched a song: \" + value)\n\t\t\t}\n\t\t} else {\n\t\t\tswitch(field) {\n\t\t\t\tcase \"artist1\":\n\t\t\t\t\tthis.setState({ searchArtist1Input: \"\" })\n\t\t\t\t\tthis.setState({ searchArtist1Result: [] })\n\t\t\t\t\tthis.setState({ searchArtist1Selection: null })\n\t\t\t\t\tbreak\n\t\t\t\tcase \"artist2\":\n\t\t\t\t\tthis.setState({ searchArtist2Input: \"\" })\n\t\t\t\t\tthis.setState({ searchArtist2Result: [] })\n\t\t\t\t\tthis.setState({ searchArtist2Selection: null })\n\t\t\t\t\tbreak\n\t\t\t\tcase \"song1\":\n\t\t\t\t\tthis.setState({ searchSong1Input: \"\" })\n\t\t\t\t\tthis.setState({ searchSong1Result: [] })\n\t\t\t\t\tthis.setState({ searchSong1Selection: null })\n\t\t\t\t\tbreak\n\t\t\t\tcase \"song2\":\n\t\t\t\t\tthis.setState({ searchSong2Input: \"\" })\n\t\t\t\t\tthis.setState({ searchSong2Result: [] })\n\t\t\t\t\tthis.setState({ searchSong2Selection: null })\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthis.setState({ searchAllInput: \"\" })\n\t\t\t\t\tthis.setState({ searchAllResult: [] })\n\t\t\t\t\tthis.setState({ searchAllSelection: null })\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handler\n\thandleCompareButtonClick(e, type) {\n\t\tif(type === \"artist\") {\n\t\t\tlet artist1 = this.state.searchArtist1Selection\n\t\t\tlet artist2 = this.state.searchArtist2Selection\n\t\t\tif(artist1 && artist2) {\n\t\t\t\tconsole.log(artist1 + \" & \" + artist2)\n\t\t\t\tif(artist1 === artist2) {\n\t\t\t\t\tconsole.log(\"you want to compare the same artists\")\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.getArtistByName(artist1)\n\t\t\t\t\tthis.getArtistByName(artist2)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"missing 1 artist at least\")\n\t\t\t}\n\t\t} \n\t\telse {\n\t\t\tlet song1 = this.state.searchSong1Selection\n\t\t\tlet song2 = this.state.searchSong2Selection\n\t\t\tif(song1 && song2) {\n\t\t\t\tconsole.log(song1 + \" & \" + song2)\n\t\t\t\tif(song1 === song2) {\n\t\t\t\t\tconsole.log(\"you want to compare the same songs\")\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//this.getSongByName(song1)\n\t\t\t\t\t//this.getSongByName(song2)\n\t\t\t\t\tconsole.log(\"TODO\")\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"missing 1 song at least\")\n\t\t\t}\n\t\t}\n\t}\n\n//////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////  RENDER  ////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\t\n\trender() {\n\t\tconst { classes } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"App\" style={{ height : '500px' }}>\n\t\t\t\t\n\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\n\t\t\t\t\t\t\tMaterial-UI\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t\n\t\t\t\t<Button \n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tonClick={ this.getState.bind(this) }>\n\t\t\t\t\t\tGet state\n\t\t\t\t</Button>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Chercher un artiste ou une chanson</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchAllResult.map(option => this.searchOptionRendering(option)) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e) }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"searchAllTextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Recherche\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchAll(e) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Comparer deux artistes</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchArtist1Result.map(option => this.searchOptionRendering(option, \"artist\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"artist1\", \"artist\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"searchArtist1TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Artiste #1\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchArtist(e, \"artist1\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchArtist2Result.map(option => this.searchOptionRendering(option, \"artist\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"artist2\", \"artist\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"searchArtist2TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Artiste #2\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchArtist(e, \"artist2\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button variant=\"outlined\" onClick={ e => this.handleCompareButtonClick(e, \"artist\") }>Comparer</Button>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<Chart\n\t\t\t\t\t\tid=\"compareArtistsChart\"\n\t\t\t\t\t\tchartType=\"BarChart\"\n\t\t\t\t\t\tdata={[[\"Age\", \"Weight\"], [4, 5.5], [8, 12]]} />\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Comparer deux chansons</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchSong1Result.map(option => this.searchOptionRendering(option, \"song\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"song1\", \"song\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"searchSong1TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Chanson #1\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchSong(e, \"song1\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchSong2Result.map(option => this.searchOptionRendering(option, \"song\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"song2\", \"song\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"searchSong2TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Chanson #2\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchSong(e, \"song2\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button variant=\"outlined\" onClick={ e => this.handleCompareButtonClick(e, \"song\") }>Comparer</Button>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withStyles(styles)(App)"]},"metadata":{},"sourceType":"module"}