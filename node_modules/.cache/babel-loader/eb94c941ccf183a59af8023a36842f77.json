{"ast":null,"code":"var _jsxFileName = \"/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js\";\nimport React, { Component } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ResponsiveBubble } from '@nivo/circle-packing';\nimport './App.css'; /////////////////////////////////////////\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topGenres: [],\n      searchAll: \"\",\n      searchAllResult: [],\n      searchArtist1: \"\",\n      searchArtist2: \"\",\n      searchArtist1Result: [],\n      searchArtist2Result: [],\n      searchSongResult: []\n    };\n  } /////////////////////////////////////////\n\n\n  componentDidMount() {//this.getGenrePopularity(10);\n  }\n\n  searchArtistData() {\n    const searchedArtist = this.input.value.trim();\n    this.setState({\n      artist: searchedArtist\n    });\n    const request = `https://wasabi.i3s.unice.fr/api/v1/artist/name/${encodeURI(searchedArtist)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        artistData: data\n      });else this.setState({\n        artistData: {}\n      });\n      console.log(this.state.artistData);\n    });\n  }\n\n  getGenrePopularity(limit) {\n    let request = `https://wasabi.i3s.unice.fr/api/v1/artist/genres/popularity`;\n    if (limit) request += `?limit=${limit}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        topGenres: data\n      });else this.setState({\n        topGenres: {}\n      });\n      console.log(this.state.topGenres);\n    });\n    const chartData = this.state.topGenres;\n    const bubbles = {\n      _id: \"Genres\",\n      children: this.state.topGenres\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(ResponsiveBar, {\n      data: chartData,\n      indexBy: \"_id\",\n      keys: ['sum'],\n      layout: \"horizontal\",\n      margin: {\n        top: 50,\n        right: 50,\n        bottom: 50,\n        left: 150\n      },\n      colors: {\n        scheme: 'category10'\n      },\n      borderRadius: 10,\n      enableGridY: false,\n      axisBottom: null,\n      axisLeft: {\n        tickSize: 0,\n        tickPadding: 10\n      },\n      labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', '2']]\n      },\n      isInteractive: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(ResponsiveBubble, {\n      root: bubbles,\n      identity: \"_id\",\n      value: \"sum\",\n      leavesOnly: true,\n      padding: 5,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      colors: {\n        scheme: 'paired'\n      },\n      colorBy: \"name\",\n      labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', '2']]\n      },\n      labelSkipRadius: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  } /////////////////////////////////////////\n  // Handler de la recherche d'artiste ou chanson\n\n\n  searchAll(e) {\n    const value = e.target.value.trim();\n    this.setState({\n      searchAll: value\n    }); //console.log(\"Search: \" + value)\n\n    if (value) this.getArtistOrSongBySearch(value);else this.setState({\n      searchAllResult: []\n    });\n  }\n  /*searchArtist(e, fieldId) {\n  \tconst value = e.target.value.trim()\n  \tlet searchAllResult\n  \tlet searchArtistResult\n  \tif(fieldId === \"artist1\")\n  \t\tthis.setState({ searchArtist1: value })\n  \telse\n  \t\tthis.setState({ searchArtist2: value })\n  \tif(value) {\n  \t\tthis.getArtistOrSongBySearch(value)\n  \t\tsearchAllResult = this.state.searchAllResult\n  \t\tif(searchAllResult) {\n  \t\t\tsearchArtistResult = searchAllResult.map()\n  \t\t}\n  \t}\n  \telse\n  \t\tthis.setState({ searchArtistResult: [] })\n  }*/\n\n  /*searchArtist() {\n  \tconst searchAllResult = this.state.searchAllResult\n  \tlet searchArtistResult = []\n  \tfor(option in searchAllResult) {\n  \t\tif(!option.title) {\n  \t\t\tsearchArtistResult.push(option)\n  \t\t\tconsole.log(\"pushed \" + option.name)\n  \t\t}\n  \t}\n  \tthis.setState({ searchArtist1Result: searchArtistResult })\n  \tconsole.log(this.state.searchArtist1Result)\n  }*/\n\n\n  searchArtist(searchAllRes) {\n    const searchArtistResult = [];\n\n    for (let i = 0; i < searchAllRes.length; i++) {\n      if (!searchAllRes[i].title) {\n        console.log(searchAllRes[i].name + \" (artiste)\");\n        searchArtistResult.push(searchAllRes[i]);\n      }\n    }\n\n    console.log(searchArtistResult);\n  }\n\n  searchSong(searchAllRes) {\n    const searchSongResult = [];\n\n    for (let i = 0; i < searchAllRes.length; i++) {\n      if (searchAllRes[i].title) {\n        console.log(searchAllRes[i].title + \" (chanson) \" + searchAllRes[i].name + \" (artiste) \" + searchAllRes[i].albumTitle + \" (album)\");\n        searchSongResult.push(searchAllRes[i]);\n      }\n    }\n\n    console.log(searchSongResult);\n  } // Requête sur l'API Wasabi : recherche d'artistes et chansons\n\n\n  getArtistOrSongBySearch(search) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        searchAllResult: data\n      });else this.setState({\n        searchAllResult: []\n      });\n      console.log(this.state.searchAllResult);\n    });\n  } // Gère l'affichage d'un élément suggéré (en paramètre)\n\n\n  searchOptionRendering(option) {\n    if (option.title) {\n      return `${option.title} (chanson de ${option.name} de l'album ${option.albumTitle})`;\n    } else {\n      return `${option.name} (artiste)`;\n    }\n  } // Handler de la sélection d'un élément suggéré\n\n\n  handleSearchOptionSelection(e) {\n    const selection = e.target.textContent;\n    let split;\n\n    if (selection) {\n      split = selection.split(\"(\");\n      if (split[1] === \"artiste)\") console.log(\"You've searched an artist: \" + split[0].trim());else console.log(\"You've searched a song: \" + split[0].trim());\n    }\n  } /////////////////////////////////////////\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: '500px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Chercher un artiste ou une chanson\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchAllResult.map(option => this.searchOptionRendering(option)),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"searchAllTextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Recherche\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchAll(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Comparer deux artistes\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchArtist1Result.map(option => this.searchOptionRendering(option)),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"artist1TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Artiste #1\",\n        margin: \"normal\",\n        variant: \"outlined\" //onChange={ e => this.searchAll(e) }\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchArtist2Result.map(option => this.searchOptionRendering(option)),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"artist2TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Artiste #2\",\n        margin: \"normal\",\n        variant: \"outlined\" //onChange={ e => this.searchAll(e) }\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Comparer !\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js"],"names":["React","Component","TextField","Autocomplete","ResponsiveBar","ResponsiveBubble","App","constructor","props","state","topGenres","searchAll","searchAllResult","searchArtist1","searchArtist2","searchArtist1Result","searchArtist2Result","searchSongResult","componentDidMount","searchArtistData","searchedArtist","input","value","trim","setState","artist","request","encodeURI","console","log","fetch","then","response","json","data","artistData","getGenrePopularity","limit","chartData","bubbles","_id","children","top","right","bottom","left","scheme","tickSize","tickPadding","from","modifiers","e","target","getArtistOrSongBySearch","searchArtist","searchAllRes","searchArtistResult","i","length","title","name","push","searchSong","albumTitle","search","searchOptionRendering","option","handleSearchOptionSelection","selection","textContent","split","render","height","map","options","params","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveBubble } from '@nivo/circle-packing'\n\nimport './App.css'\n\n/////////////////////////////////////////\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\n\t\t\ttopGenres: [],\n\n\t\t\tsearchAll: \"\",\n\t\t\tsearchAllResult: [],\n\n\t\t\tsearchArtist1: \"\",\n\t\t\tsearchArtist2: \"\",\n\t\t\tsearchArtist1Result: [],\n\t\t\tsearchArtist2Result: [],\n\t\t\t\n\t\t\tsearchSongResult: []\n\t\t}\n\t}\n\n\t/////////////////////////////////////////\n\n\tcomponentDidMount() {\n\t\t//this.getGenrePopularity(10);\n\t}\n\n\tsearchArtistData() {\n\t\tconst searchedArtist = this.input.value.trim()\n\t\tthis.setState({ artist: searchedArtist })\n\n\t\tconst request = `https://wasabi.i3s.unice.fr/api/v1/artist/name/${encodeURI(searchedArtist)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ artistData: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ artistData: {} })\n\t\t\t\tconsole.log(this.state.artistData)\n\t\t\t})\n\t}\n\n\tgetGenrePopularity(limit) {\n\t\tlet request = `https://wasabi.i3s.unice.fr/api/v1/artist/genres/popularity`\n\t\tif(limit)\n\t\t\trequest += `?limit=${limit}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ topGenres: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ topGenres: {} })\n\t\t\t\tconsole.log(this.state.topGenres)\n\t\t\t})\n\t\t\n\t\tconst chartData = this.state.topGenres\n\t\tconst bubbles = {\n\t\t\t_id: \"Genres\",\n\t\t\tchildren: this.state.topGenres\n\t\t}\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<ResponsiveBar\n\t\t\t\t\tdata={chartData}\n\t\t\t\t\tindexBy=\"_id\"\n\t\t\t\t\tkeys={[ 'sum' ]}\n\t\t\t\t\tlayout=\"horizontal\"\n\t\t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 150 }}\n\t\t\t\t\tcolors={{ scheme: 'category10' }}\n\t\t\t\t\tborderRadius={10}\n\t\t\t\t\tenableGridY={false}\n\t\t\t\t\taxisBottom={null}\n\t\t\t\t\taxisLeft={{\n\t\t\t\t\t\ttickSize: 0,\n\t\t\t\t\t\ttickPadding: 10\n\t\t\t\t\t}}\n\t\t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n\t\t\t\t\tisInteractive={false}\n\t\t\t\t/>\n\t\t\t\t<ResponsiveBubble\n\t\t\t\t\troot={bubbles}\n\t\t\t\t\tidentity=\"_id\"\n\t\t\t\t\tvalue=\"sum\"\n\t\t\t\t\tleavesOnly={true}\n\t\t\t\t\tpadding={5}\n\t\t\t\t\tmargin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n\t\t\t\t\tcolors={{ scheme: 'paired' }}\n\t\t\t\t\tcolorBy='name'\n\t\t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n\t\t\t\t\tlabelSkipRadius={0}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t/////////////////////////////////////////\n\n\t// Handler de la recherche d'artiste ou chanson\n\tsearchAll(e) {\n\t\tconst value = e.target.value.trim()\n\t\tthis.setState({ searchAll: value })\n\t\t//console.log(\"Search: \" + value)\n\t\tif(value)\n\t\t\tthis.getArtistOrSongBySearch(value)\n\t\telse\n\t\t\tthis.setState({ searchAllResult: [] })\n\t}\n\n\t/*searchArtist(e, fieldId) {\n\t\tconst value = e.target.value.trim()\n\t\tlet searchAllResult\n\t\tlet searchArtistResult\n\t\tif(fieldId === \"artist1\")\n\t\t\tthis.setState({ searchArtist1: value })\n\t\telse\n\t\t\tthis.setState({ searchArtist2: value })\n\t\tif(value) {\n\t\t\tthis.getArtistOrSongBySearch(value)\n\t\t\tsearchAllResult = this.state.searchAllResult\n\t\t\tif(searchAllResult) {\n\t\t\t\tsearchArtistResult = searchAllResult.map()\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tthis.setState({ searchArtistResult: [] })\n\t}*/\n\n\t/*searchArtist() {\n\t\tconst searchAllResult = this.state.searchAllResult\n\t\tlet searchArtistResult = []\n\t\tfor(option in searchAllResult) {\n\t\t\tif(!option.title) {\n\t\t\t\tsearchArtistResult.push(option)\n\t\t\t\tconsole.log(\"pushed \" + option.name)\n\t\t\t}\n\t\t}\n\t\tthis.setState({ searchArtist1Result: searchArtistResult })\n\t\tconsole.log(this.state.searchArtist1Result)\n\t}*/\n\n\tsearchArtist(searchAllRes) {\n\t\tconst searchArtistResult = []\n\t\tfor(let i=0; i<searchAllRes.length; i++) {\n\t\t\tif(!searchAllRes[i].title) {\n\t\t\t\tconsole.log(searchAllRes[i].name + \" (artiste)\")\n\t\t\t\tsearchArtistResult.push(searchAllRes[i])\n\t\t\t}\n\t\t}\n\t\tconsole.log(searchArtistResult)\n\t}\n\n\tsearchSong(searchAllRes) {\n\t\tconst searchSongResult = []\n\t\tfor(let i=0; i<searchAllRes.length; i++) {\n\t\t\tif(searchAllRes[i].title) {\n\t\t\t\tconsole.log(searchAllRes[i].title + \" (chanson) \" + searchAllRes[i].name + \" (artiste) \" + searchAllRes[i].albumTitle + \" (album)\")\n\t\t\t\tsearchSongResult.push(searchAllRes[i])\n\t\t\t}\n\t\t}\n\t\tconsole.log(searchSongResult)\n\t}\n\n\t// Requête sur l'API Wasabi : recherche d'artistes et chansons\n\tgetArtistOrSongBySearch(search) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ searchAllResult: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchAllResult: [] })\n\t\t\t\tconsole.log(this.state.searchAllResult)\n\t\t\t})\n\t}\n\n\t// Gère l'affichage d'un élément suggéré (en paramètre)\n\tsearchOptionRendering(option) {\n\t\tif(option.title) {\n\t\t\treturn `${option.title} (chanson de ${option.name} de l'album ${option.albumTitle})`\n\t\t}\n\t\telse {\n\t\t\treturn `${option.name} (artiste)`\n\t\t}\n\t}\n\n\t// Handler de la sélection d'un élément suggéré\n\thandleSearchOptionSelection(e) {\n\t\tconst selection = e.target.textContent\n\t\tlet split\n\t\tif(selection) {\n\t\t\tsplit = selection.split(\"(\")\n\t\t\tif(split[1] === \"artiste)\")\n\t\t\t\tconsole.log(\"You've searched an artist: \" + split[0].trim())\n\t\t\telse\n\t\t\t\tconsole.log(\"You've searched a song: \" + split[0].trim())\n\t\t}\n\t}\n\n\t/////////////////////////////////////////\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"App\" style={{ height : '500px' }}>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Chercher un artiste ou une chanson</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchAllResult.map(option => this.searchOptionRendering(option)) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e) }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"searchAllTextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Recherche\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchAll(e) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Comparer deux artistes</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchArtist1Result.map(option => this.searchOptionRendering(option)) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e) }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"artist1TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Artiste #1\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t//onChange={ e => this.searchAll(e) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchArtist2Result.map(option => this.searchOptionRendering(option)) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e) }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"artist2TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Artiste #2\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t//onChange={ e => this.searchAll(e) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<button>Comparer !</button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}