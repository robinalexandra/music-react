{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: there are multiple InputBase components inside a FromControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    hiddenLabel: hiddenLabel,\n    margin: margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","map":{"version":3,"sources":["/Users/robina/Documents/MIAGE/React/bd-musique/node_modules/@material-ui/core/esm/FormControl/FormControl.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","isFilled","isAdornedStart","withStyles","capitalize","isMuiElement","FormControlContext","styles","root","display","flexDirection","position","minWidth","padding","margin","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","fullWidth","width","FormControl","forwardRef","props","ref","children","classes","className","_props$component","component","Component","_props$disabled","disabled","_props$error","error","_props$fullWidth","_props$hiddenLabel","hiddenLabel","_props$margin","_props$required","required","_props$variant","variant","other","_React$useState","useState","initialAdornedStart","Children","forEach","child","input","adornedStart","_React$useState2","initialFilled","filled","setFilled","_React$useState3","focused","setFocused","registerEffect","process","env","NODE_ENV","registeredInput","useRef","current","console","join","onFilled","useCallback","onEmpty","childContext","onBlur","onFocus","createElement","Provider","value","concat","propTypes","node","object","isRequired","string","elementType","bool","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: there are multiple InputBase components inside a FromControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    hiddenLabel: hiddenLabel,\n    margin: margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);"]},"metadata":{},"sourceType":"module"}