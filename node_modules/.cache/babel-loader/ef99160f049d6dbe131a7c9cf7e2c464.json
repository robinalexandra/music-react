{"ast":null,"code":"import _defineProperty from \"/Users/robina/Documents/MIAGE/React/bd-musique/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hobbies: {},\n      artist: ''\n    };\n  }\n\n  searchArtistData() {\n    const searchedArtist = this.input.value;\n    this.setState({\n      artist: searchedArtist\n    });\n  }\n  /*addHobby() {\n  \t// faire une copie de l'objet hobbies\n  \tconst hobbies = { ...this.state.hobbies };\n  \t\t// Ajouter le nouveau hobby\n  \tconst timestamp = Date.now();\n  \thobbies[`hobby-${timestamp}`] = this.input.value;\n  \t// equivalent a : hobbies['hobby' + timestamp] = this.state.input;\n  \t\t// on met a jour l'etat\n  \tthis.setState({ hobbies });\n  }*/\n\n\n  removeHobby(key) {\n    // faire une copie de l'objet hobbies\n    const hobbies = _objectSpread({}, this.state.hobbies); // Supprime le hobby dont la cle key a ete passee en parametres\n    //delete hobbies[key]; // ne marche pas avec firebase\n\n\n    hobbies[key] = null; // Mettre a jour l'etat\n    // En ES6 vous pouvez juste taper {'hobbies'} au lieu de {hobbies:hobbies}\n\n    this.setState({\n      hobbies\n    });\n    console.log(this.state.hobbies);\n  } // Appele avant render\n\n\n  componentWillMount() {\n    console.log(\"Component will mount\");\n  } // appele quand le composant disparait, par ex\n  // quand on quitte l'application\n\n\n  componentWillUnmount() {\n    console.log(\"Component will unmount\");\n  }\n\n  render() {\n    // iterateur sur les proprietes de l'objet\n\n    /*let list = Object.keys(this.state.hobbies).map((key, index) => {\n    \t// key = element courant (propriete courante de l'objet)\n    \tconst hobby = this.state.hobbies[key];\n    \t\tconst liStyle = {\n    \t\tbackgroundColor: index % 2 === 0 ? 'lightpink' : 'red'\n    \t};\n    \t\treturn <li key={key} style={liStyle} \n    \t\tonClick={() => this.removeHobby(key)}>\n    \t\t{hobby}\n    \t</li>\n    });*/\n    let artistData = '';\n\n    if (this.state.artist != '') {\n      artistData = \"Recherche : \" + this.state.artist;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Chercher un artiste :\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: input => this.input = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.searchArtistData(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"GO\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, artistData));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js"],"names":["React","Component","App","constructor","props","state","hobbies","artist","searchArtistData","searchedArtist","input","value","setState","removeHobby","key","console","log","componentWillMount","componentWillUnmount","render","artistData"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,EADG;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAb;AAIA;;AAEDC,EAAAA,gBAAgB,GAAG;AAClB,UAAMC,cAAc,GAAG,KAAKC,KAAL,CAAWC,KAAlC;AACA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,MAAM,EAAEE;AAAV,KAAd;AACA;AAED;;;;;;;;;;;;AAaAI,EAAAA,WAAW,CAACC,GAAD,EAAM;AAChB;AACA,UAAMR,OAAO,qBAAQ,KAAKD,KAAL,CAAWC,OAAnB,CAAb,CAFgB,CAIhB;AACA;;;AACAA,IAAAA,OAAO,CAACQ,GAAD,CAAP,GAAe,IAAf,CANgB,CAQhB;AACA;;AACA,SAAKF,QAAL,CAAc;AAAEN,MAAAA;AAAF,KAAd;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,OAAvB;AACA,GAxC0B,CA0C3B;;;AACAW,EAAAA,kBAAkB,GAAG;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,GA7C0B,CA+C3B;AACA;;;AACAE,EAAAA,oBAAoB,GAAG;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR;;AACA;;;;;;;;;;;AAcA,QAAIC,UAAU,GAAG,EAAjB;;AACA,QAAG,KAAKf,KAAL,CAAWE,MAAX,IAAqB,EAAxB,EAA4B;AAC3Ba,MAAAA,UAAU,GAAG,iBAAiB,KAAKf,KAAL,CAAWE,MAAzC;AACA;;AAED,WACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,EAEC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,GAAG,EAAGG,KAAD,IAAW,KAAKA,KAAL,GAAaA,KAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAMC;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKF,gBAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAND,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIY,UAAJ,CAPD,CADD;AAWA;;AArF0B;;AAwF5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\thobbies: {},\n\t\t\tartist: ''\n\t\t};\n\t}\n\n\tsearchArtistData() {\n\t\tconst searchedArtist = this.input.value;\n\t\tthis.setState({ artist: searchedArtist });\n\t}\n\n\t/*addHobby() {\n\t\t// faire une copie de l'objet hobbies\n\t\tconst hobbies = { ...this.state.hobbies };\n\n\t\t// Ajouter le nouveau hobby\n\t\tconst timestamp = Date.now();\n\t\thobbies[`hobby-${timestamp}`] = this.input.value;\n\t\t// equivalent a : hobbies['hobby' + timestamp] = this.state.input;\n\n\t\t// on met a jour l'etat\n\t\tthis.setState({ hobbies });\n\t}*/\n\n\tremoveHobby(key) {\n\t\t// faire une copie de l'objet hobbies\n\t\tconst hobbies = { ...this.state.hobbies };\n\n\t\t// Supprime le hobby dont la cle key a ete passee en parametres\n\t\t//delete hobbies[key]; // ne marche pas avec firebase\n\t\thobbies[key] = null;\n\n\t\t// Mettre a jour l'etat\n\t\t// En ES6 vous pouvez juste taper {'hobbies'} au lieu de {hobbies:hobbies}\n\t\tthis.setState({ hobbies });\n\t\tconsole.log(this.state.hobbies)\n\t}\n\n\t// Appele avant render\n\tcomponentWillMount() {\n\t\tconsole.log(\"Component will mount\");\n\t}\n\n\t// appele quand le composant disparait, par ex\n\t// quand on quitte l'application\n\tcomponentWillUnmount() {\n\t\tconsole.log(\"Component will unmount\");\n\t}\n\n\trender() {\n\t\t// iterateur sur les proprietes de l'objet\n\t\t/*let list = Object.keys(this.state.hobbies).map((key, index) => {\n\t\t\t// key = element courant (propriete courante de l'objet)\n\t\t\tconst hobby = this.state.hobbies[key];\n\n\t\t\tconst liStyle = {\n\t\t\t\tbackgroundColor: index % 2 === 0 ? 'lightpink' : 'red'\n\t\t\t};\n\n\t\t\treturn <li key={key} style={liStyle} \n\t\t\t\tonClick={() => this.removeHobby(key)}>\n\t\t\t\t{hobby}\n\t\t\t</li>\n\t\t});*/\n\n\t\tlet artistData = '';\n\t\tif(this.state.artist != '') {\n\t\t\tartistData = \"Recherche : \" + this.state.artist\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h3>Chercher un artiste :</h3>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={(input) => this.input = input}\n\t\t\t\t/>\n\t\t\t\t<button onClick={() => this.searchArtistData()}>GO</button>\n\t\t\t\t<p>{artistData}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}