{"ast":null,"code":"var _jsxFileName = \"/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ResponsiveBubble } from '@nivo/circle-packing';\nimport './App.css'; /////////////////////////////////////////\n\nconst styles = theme => ({\n  title: {},\n  button: {\n    margin: 50\n  }\n}); /////////////////////////////////////////\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topGenres: [],\n      search: {\n        all: {\n          value: \"\",\n          result: []\n        },\n        artist: {\n          value1: \"\",\n          result1: [],\n          value2: \"\",\n          result2: []\n        },\n        song: {\n          values: [\"\"],\n          results: [[]]\n        }\n      },\n      searchAll: \"\",\n      searchAllResult: [],\n      searchArtist1: \"\",\n      searchArtist1Result: [],\n      searchArtist2: \"\",\n      searchArtist2Result: [],\n      searchSong1: \"\",\n      searchSong1Result: [],\n      searchSong2: \"\",\n      searchSong2Result: []\n    };\n  } /////////////////////////////////////////\n\n\n  componentDidMount() {//this.getGenrePopularity(10);\n  }\n\n  getState() {\n    console.log(this.state);\n  }\n\n  searchArtistData() {\n    const searchedArtist = this.input.value.trim();\n    this.setState({\n      artist: searchedArtist\n    });\n    const request = `https://wasabi.i3s.unice.fr/api/v1/artist/name/${encodeURI(searchedArtist)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        artistData: data\n      });else this.setState({\n        artistData: {}\n      });\n      console.log(this.state.artistData);\n    });\n  }\n\n  getGenrePopularity(limit) {\n    let request = `https://wasabi.i3s.unice.fr/api/v1/artist/genres/popularity`;\n    if (limit) request += `?limit=${limit}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        topGenres: data\n      });else this.setState({\n        topGenres: {}\n      });\n      console.log(this.state.topGenres);\n    });\n    const chartData = this.state.topGenres;\n    const bubbles = {\n      _id: \"Genres\",\n      children: this.state.topGenres\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(ResponsiveBar, {\n      data: chartData,\n      indexBy: \"_id\",\n      keys: ['sum'],\n      layout: \"horizontal\",\n      margin: {\n        top: 50,\n        right: 50,\n        bottom: 50,\n        left: 150\n      },\n      colors: {\n        scheme: 'category10'\n      },\n      borderRadius: 10,\n      enableGridY: false,\n      axisBottom: null,\n      axisLeft: {\n        tickSize: 0,\n        tickPadding: 10\n      },\n      labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', '2']]\n      },\n      isInteractive: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(ResponsiveBubble, {\n      root: bubbles,\n      identity: \"_id\",\n      value: \"sum\",\n      leavesOnly: true,\n      padding: 5,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      colors: {\n        scheme: 'paired'\n      },\n      colorBy: \"name\",\n      labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', '2']]\n      },\n      labelSkipRadius: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  } /////////////////////////////////////////\n  // Requête sur l'API Wasabi : recherche d'artistes et chansons\n\n\n  getArtistOrSongBySearch(search) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data != null) this.setState({\n        searchAllResult: data\n      });else this.setState({\n        searchAllResult: []\n      });\n      console.log(this.state.searchAllResult);\n    });\n  } // Requête sur l'API Wasabi : recherche d'artistes\n\n\n  getArtistBySearch(search, artistId) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      let searchResult;\n      if (data != null) searchResult = data.filter(option => !option.title);else searchResult = [];\n      if (artistId === \"artist1\") this.setState({\n        searchArtist1Result: searchResult\n      });else this.setState({\n        searchArtist2Result: searchResult\n      });\n    });\n  } // Requête sur l'API Wasabi : recherche de chansons\n\n\n  getSongBySearch(search, songId) {\n    const request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`;\n    console.log(request);\n    fetch(request).then(response => {\n      return response.json();\n    }).then(data => {\n      let searchResult;\n      if (data != null) searchResult = data.filter(option => option.title);else searchResult = [];\n      if (songId === \"song1\") this.setState({\n        searchSong1Result: searchResult\n      });else this.setState({\n        searchSong2Result: searchResult\n      });\n    });\n  } // Handler de la recherche d'artiste ou chanson (TextField onChange)\n\n\n  searchAll(e) {\n    const value = e.target.value.trim();\n    this.setState({\n      searchAll: value\n    });\n    console.log(\"Search: \" + value);\n    if (value) this.getArtistOrSongBySearch(value);else this.setState({\n      searchAllResult: []\n    });\n  } // Handler de la recherche d'artiste (TextField onChange)\n\n\n  searchArtist(e, artistId) {\n    const value = e.target.value.trim();\n    if (artistId === \"artist1\") this.setState({\n      searchArtist1: value\n    });else this.setState({\n      searchArtist2: value\n    });\n    console.log(\"Search (\" + artistId + \"): \" + value);\n    if (value) this.getArtistBySearch(value, artistId);else {\n      if (artistId === \"artist1\") this.setState({\n        searchArtist1Result: []\n      });else this.setState({\n        searchArtist2Result: []\n      });\n      console.log(\"[]\");\n    }\n  } // Handler de la recherche de chanson (TextField onChange)\n\n\n  searchSong(e, songId) {\n    const value = e.target.value.trim();\n    if (songId === \"song1\") this.setState({\n      searchSong1: value\n    });else this.setState({\n      searchSong2: value\n    });\n    console.log(\"Search (\" + songId + \"): \" + value);\n    if (value) this.getSongBySearch(value, songId);else {\n      if (songId === \"song1\") this.setState({\n        searchSong1Result: []\n      });else this.setState({\n        searchSong2Result: []\n      });\n      console.log(\"[]\");\n    }\n  } // Gère l'affichage d'un élément suggéré (en paramètre)\n\n\n  searchOptionRendering(option, type) {\n    if (type === \"artist\") return option.name;\n    if (option.title) return `${option.title} (chanson de ${option.name} de l'album ${option.albumTitle})`;else return `${option.name} (artiste)`;\n  } // Handler de la sélection d'un élément suggéré\n\n\n  handleSearchOptionSelection(e, field, type) {\n    //console.log(e.target)\n    const selection = e.target.textContent;\n\n    if (selection) {\n      if (!type) {\n        let split = selection.split(\"(\");\n        let value = split[0].trim();\n        this.setState({\n          searchAll: value\n        });\n        if (split[1] === \"artiste)\") console.log(\"You've searched an artist: \" + value);else console.log(\"You've searched a song: \" + value);\n      } else {\n        let value = e.target.textContent;\n\n        switch (field) {\n          case \"artist1\":\n            this.setState({\n              searchArtist1: value\n            });\n            break;\n\n          case \"artist2\":\n            this.setState({\n              searchArtist2: value\n            });\n            break;\n\n          case \"song1\":\n            this.setState({\n              searchSong1: value\n            });\n            break;\n\n          case \"song2\":\n            this.setState({\n              searchSong2: value\n            });\n            break;\n\n          default:\n        }\n\n        if (type === \"artist\") console.log(\"You've searched an artist: \" + value);else if (type === \"song\") console.log(\"You've searched a song: \" + value);\n      }\n    } else {\n      switch (field) {\n        case \"artist1\":\n          this.setState({\n            searchArtist1: \"\"\n          });\n          this.setState({\n            searchArtist1Result: []\n          });\n          break;\n\n        case \"artist2\":\n          this.setState({\n            searchArtist2: \"\"\n          });\n          this.setState({\n            searchArtist2Result: []\n          });\n          break;\n\n        case \"song1\":\n          this.setState({\n            searchSong1: \"\"\n          });\n          this.setState({\n            searchSong1Result: []\n          });\n          break;\n\n        case \"song2\":\n          this.setState({\n            searchSong2: \"\"\n          });\n          this.setState({\n            searchSong2Result: []\n          });\n          break;\n\n        default:\n          this.setState({\n            searchAll: \"\"\n          });\n          this.setState({\n            searchAllResult: []\n          });\n      }\n    }\n  } /////////////////////////////////////////\n\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: '500px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Material-UI\"))), React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: this.getState.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Get state\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Chercher un artiste ou une chanson\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchAllResult.map(option => this.searchOptionRendering(option)),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"searchAllTextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Recherche\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchAll(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Comparer deux artistes\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchArtist1Result.map(option => this.searchOptionRendering(option, \"artist\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"artist1\", \"artist\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"artist1TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Artiste #1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchArtist(e, \"artist1\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchArtist2Result.map(option => this.searchOptionRendering(option, \"artist\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"artist2\", \"artist\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"artist2TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Artiste #2\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchArtist(e, \"artist2\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \"Comparer\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Comparer deux chansons\"), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchSong1Result.map(option => this.searchOptionRendering(option, \"song\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"song1\", \"song\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"song1TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Chanson #1\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchSong(e, \"song1\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      freeSolo: true,\n      options: this.state.searchSong2Result.map(option => this.searchOptionRendering(option, \"song\")),\n      filterOptions: options => {\n        return options;\n      },\n      onChange: e => this.handleSearchOptionSelection(e, \"song2\", \"song\"),\n      renderInput: params => React.createElement(TextField, Object.assign({\n        id: \"song2TextField\"\n      }, params, {\n        inputRef: input => this.input = input,\n        style: {\n          width: '300px'\n        },\n        label: \"Chanson #2\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: e => this.searchSong(e, \"song2\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \"Comparer\")));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/robina/Documents/MIAGE/React/bd-musique/src/App.js"],"names":["React","Component","withStyles","TextField","Button","AppBar","Toolbar","Typography","Autocomplete","ResponsiveBar","ResponsiveBubble","styles","theme","title","button","margin","App","constructor","props","state","topGenres","search","all","value","result","artist","value1","result1","value2","result2","song","values","results","searchAll","searchAllResult","searchArtist1","searchArtist1Result","searchArtist2","searchArtist2Result","searchSong1","searchSong1Result","searchSong2","searchSong2Result","componentDidMount","getState","console","log","searchArtistData","searchedArtist","input","trim","setState","request","encodeURI","fetch","then","response","json","data","artistData","getGenrePopularity","limit","chartData","bubbles","_id","children","top","right","bottom","left","scheme","tickSize","tickPadding","from","modifiers","getArtistOrSongBySearch","getArtistBySearch","artistId","searchResult","filter","option","getSongBySearch","songId","e","target","searchArtist","searchSong","searchOptionRendering","type","name","albumTitle","handleSearchOptionSelection","field","selection","textContent","split","render","classes","height","bind","map","options","params","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,OAApC,EAA6CC,UAA7C,QAA+D,mBAA/D;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,WAAP,C,CAEA;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD;AAFgB,CAAL,CAApB,C,CAOA;;;AAEA,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AAE3BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAEZC,MAAAA,SAAS,EAAE,EAFC;AAIZC,MAAAA,MAAM,EAAE;AACPC,QAAAA,GAAG,EAAE;AACJC,UAAAA,KAAK,EAAE,EADH;AAEJC,UAAAA,MAAM,EAAE;AAFJ,SADE;AAKPC,QAAAA,MAAM,EAAE;AACPC,UAAAA,MAAM,EAAE,EADD;AAEPC,UAAAA,OAAO,EAAE,EAFF;AAGPC,UAAAA,MAAM,EAAE,EAHD;AAIPC,UAAAA,OAAO,EAAE;AAJF,SALD;AAWPC,QAAAA,IAAI,EAAE;AACLC,UAAAA,MAAM,EAAE,CAAC,EAAD,CADH;AAELC,UAAAA,OAAO,EAAE,CAAC,EAAD;AAFJ;AAXC,OAJI;AAqBZC,MAAAA,SAAS,EAAE,EArBC;AAsBZC,MAAAA,eAAe,EAAE,EAtBL;AAwBZC,MAAAA,aAAa,EAAE,EAxBH;AAyBZC,MAAAA,mBAAmB,EAAE,EAzBT;AA2BZC,MAAAA,aAAa,EAAE,EA3BH;AA4BZC,MAAAA,mBAAmB,EAAE,EA5BT;AA8BZC,MAAAA,WAAW,EAAE,EA9BD;AA+BZC,MAAAA,iBAAiB,EAAE,EA/BP;AAiCZC,MAAAA,WAAW,EAAE,EAjCD;AAkCZC,MAAAA,iBAAiB,EAAE;AAlCP,KAAb;AAoCA,GAzC0B,CA2C3B;;;AAEAC,EAAAA,iBAAiB,GAAG,CACnB;AACA;;AAEDC,EAAAA,QAAQ,GAAG;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAjB;AACA;;AAED4B,EAAAA,gBAAgB,GAAG;AAClB,UAAMC,cAAc,GAAG,KAAKC,KAAL,CAAW1B,KAAX,CAAiB2B,IAAjB,EAAvB;AACA,SAAKC,QAAL,CAAc;AAAE1B,MAAAA,MAAM,EAAEuB;AAAV,KAAd;AAEA,UAAMI,OAAO,GAAI,kDAAiDC,SAAS,CAACL,cAAD,CAAiB,EAA5F;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AAEAE,IAAAA,KAAK,CAACF,OAAD,CAAL,CACEG,IADF,CACQC,QAAD,IAAc;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAHF,EAIEF,IAJF,CAIQG,IAAD,IAAU;AACf,UAAGA,IAAI,IAAI,IAAX,EACC,KAAKP,QAAL,CAAc;AAAEQ,QAAAA,UAAU,EAAED;AAAd,OAAd,EADD,KAGC,KAAKP,QAAL,CAAc;AAAEQ,QAAAA,UAAU,EAAE;AAAd,OAAd;AACDd,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWwC,UAAvB;AACA,KAVF;AAWA;;AAEDC,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACzB,QAAIT,OAAO,GAAI,6DAAf;AACA,QAAGS,KAAH,EACCT,OAAO,IAAK,UAASS,KAAM,EAA3B;AACDhB,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AAEAE,IAAAA,KAAK,CAACF,OAAD,CAAL,CACEG,IADF,CACQC,QAAD,IAAc;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAHF,EAIEF,IAJF,CAIQG,IAAD,IAAU;AACf,UAAGA,IAAI,IAAI,IAAX,EACC,KAAKP,QAAL,CAAc;AAAE/B,QAAAA,SAAS,EAAEsC;AAAb,OAAd,EADD,KAGC,KAAKP,QAAL,CAAc;AAAE/B,QAAAA,SAAS,EAAE;AAAb,OAAd;AACDyB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWC,SAAvB;AACA,KAVF;AAYA,UAAM0C,SAAS,GAAG,KAAK3C,KAAL,CAAWC,SAA7B;AACA,UAAM2C,OAAO,GAAG;AACfC,MAAAA,GAAG,EAAE,QADU;AAEfC,MAAAA,QAAQ,EAAE,KAAK9C,KAAL,CAAWC;AAFN,KAAhB;AAKA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AACC,MAAA,IAAI,EAAE0C,SADP;AAEC,MAAA,OAAO,EAAC,KAFT;AAGC,MAAA,IAAI,EAAE,CAAE,KAAF,CAHP;AAIC,MAAA,MAAM,EAAC,YAJR;AAKC,MAAA,MAAM,EAAE;AAAEI,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,MAAM,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OALT;AAMC,MAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OANT;AAOC,MAAA,YAAY,EAAE,EAPf;AAQC,MAAA,WAAW,EAAE,KARd;AASC,MAAA,UAAU,EAAE,IATb;AAUC,MAAA,QAAQ,EAAE;AACTC,QAAAA,QAAQ,EAAE,CADD;AAETC,QAAAA,WAAW,EAAE;AAFJ,OAVX;AAcC,MAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,SAAS,EAAE,CAAE,CAAE,QAAF,EAAY,GAAZ,CAAF;AAA5B,OAdjB;AAeC,MAAA,aAAa,EAAE,KAfhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAkBC,oBAAC,gBAAD;AACC,MAAA,IAAI,EAAEX,OADP;AAEC,MAAA,QAAQ,EAAC,KAFV;AAGC,MAAA,KAAK,EAAC,KAHP;AAIC,MAAA,UAAU,EAAE,IAJb;AAKC,MAAA,OAAO,EAAE,CALV;AAMC,MAAA,MAAM,EAAE;AAAEG,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,MAAM,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OANT;AAOC,MAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAPT;AAQC,MAAA,OAAO,EAAC,MART;AASC,MAAA,cAAc,EAAE;AAAEG,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,SAAS,EAAE,CAAE,CAAE,QAAF,EAAY,GAAZ,CAAF;AAA5B,OATjB;AAUC,MAAA,eAAe,EAAE,CAVlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBD,CADD;AAiCA,GAlI0B,CAoI3B;AAEA;;;AACAC,EAAAA,uBAAuB,CAACtD,MAAD,EAAS;AAC/B,UAAM+B,OAAO,GAAI,+CAA8CC,SAAS,CAAChC,MAAD,CAAS,EAAjF;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AAEAE,IAAAA,KAAK,CAACF,OAAD,CAAL,CACEG,IADF,CACQC,QAAD,IAAc;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAHF,EAIEF,IAJF,CAIQG,IAAD,IAAU;AACf,UAAGA,IAAI,IAAI,IAAX,EACC,KAAKP,QAAL,CAAc;AAAEjB,QAAAA,eAAe,EAAEwB;AAAnB,OAAd,EADD,KAGC,KAAKP,QAAL,CAAc;AAAEjB,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACDW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWe,eAAvB;AACA,KAVF;AAWA,GAtJ0B,CAwJ3B;;;AACA0C,EAAAA,iBAAiB,CAACvD,MAAD,EAASwD,QAAT,EAAmB;AACnC,UAAMzB,OAAO,GAAI,+CAA8CC,SAAS,CAAChC,MAAD,CAAS,EAAjF;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AAEAE,IAAAA,KAAK,CAACF,OAAD,CAAL,CACEG,IADF,CACQC,QAAD,IAAc;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAHF,EAIEF,IAJF,CAIQG,IAAD,IAAU;AACf,UAAIoB,YAAJ;AACA,UAAGpB,IAAI,IAAI,IAAX,EACCoB,YAAY,GAAGpB,IAAI,CAACqB,MAAL,CAAYC,MAAM,IAAI,CAACA,MAAM,CAACnE,KAA9B,CAAf,CADD,KAGCiE,YAAY,GAAG,EAAf;AACD,UAAGD,QAAQ,KAAK,SAAhB,EACC,KAAK1B,QAAL,CAAc;AAAEf,QAAAA,mBAAmB,EAAE0C;AAAvB,OAAd,EADD,KAGC,KAAK3B,QAAL,CAAc;AAAEb,QAAAA,mBAAmB,EAAEwC;AAAvB,OAAd;AACD,KAdF;AAeA,GA5K0B,CA8K3B;;;AACAG,EAAAA,eAAe,CAAC5D,MAAD,EAAS6D,MAAT,EAAiB;AAC/B,UAAM9B,OAAO,GAAI,+CAA8CC,SAAS,CAAChC,MAAD,CAAS,EAAjF;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AAEAE,IAAAA,KAAK,CAACF,OAAD,CAAL,CACEG,IADF,CACQC,QAAD,IAAc;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAHF,EAIEF,IAJF,CAIQG,IAAD,IAAU;AACf,UAAIoB,YAAJ;AACA,UAAGpB,IAAI,IAAI,IAAX,EACCoB,YAAY,GAAGpB,IAAI,CAACqB,MAAL,CAAYC,MAAM,IAAIA,MAAM,CAACnE,KAA7B,CAAf,CADD,KAGCiE,YAAY,GAAG,EAAf;AACD,UAAGI,MAAM,KAAK,OAAd,EACC,KAAK/B,QAAL,CAAc;AAAEX,QAAAA,iBAAiB,EAAEsC;AAArB,OAAd,EADD,KAGC,KAAK3B,QAAL,CAAc;AAAET,QAAAA,iBAAiB,EAAEoC;AAArB,OAAd;AACD,KAdF;AAeA,GAlM0B,CAoM3B;;;AACA7C,EAAAA,SAAS,CAACkD,CAAD,EAAI;AACZ,UAAM5D,KAAK,GAAG4D,CAAC,CAACC,MAAF,CAAS7D,KAAT,CAAe2B,IAAf,EAAd;AACA,SAAKC,QAAL,CAAc;AAAElB,MAAAA,SAAS,EAAEV;AAAb,KAAd;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAavB,KAAzB;AACA,QAAGA,KAAH,EACC,KAAKoD,uBAAL,CAA6BpD,KAA7B,EADD,KAGC,KAAK4B,QAAL,CAAc;AAAEjB,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACD,GA7M0B,CA+M3B;;;AACAmD,EAAAA,YAAY,CAACF,CAAD,EAAIN,QAAJ,EAAc;AACzB,UAAMtD,KAAK,GAAG4D,CAAC,CAACC,MAAF,CAAS7D,KAAT,CAAe2B,IAAf,EAAd;AACA,QAAG2B,QAAQ,KAAK,SAAhB,EACC,KAAK1B,QAAL,CAAc;AAAEhB,MAAAA,aAAa,EAAEZ;AAAjB,KAAd,EADD,KAGC,KAAK4B,QAAL,CAAc;AAAEd,MAAAA,aAAa,EAAEd;AAAjB,KAAd;AACDsB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAa+B,QAAb,GAAwB,KAAxB,GAAgCtD,KAA5C;AACA,QAAGA,KAAH,EACC,KAAKqD,iBAAL,CAAuBrD,KAAvB,EAA8BsD,QAA9B,EADD,KAEK;AACJ,UAAGA,QAAQ,KAAK,SAAhB,EACC,KAAK1B,QAAL,CAAc;AAAEf,QAAAA,mBAAmB,EAAE;AAAvB,OAAd,EADD,KAGC,KAAKe,QAAL,CAAc;AAAEb,QAAAA,mBAAmB,EAAE;AAAvB,OAAd;AACDO,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA;AACD,GAhO0B,CAkO3B;;;AACAwC,EAAAA,UAAU,CAACH,CAAD,EAAID,MAAJ,EAAY;AACrB,UAAM3D,KAAK,GAAG4D,CAAC,CAACC,MAAF,CAAS7D,KAAT,CAAe2B,IAAf,EAAd;AACA,QAAGgC,MAAM,KAAK,OAAd,EACC,KAAK/B,QAAL,CAAc;AAAEZ,MAAAA,WAAW,EAAEhB;AAAf,KAAd,EADD,KAGC,KAAK4B,QAAL,CAAc;AAAEV,MAAAA,WAAW,EAAElB;AAAf,KAAd;AACDsB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaoC,MAAb,GAAsB,KAAtB,GAA8B3D,KAA1C;AACA,QAAGA,KAAH,EACC,KAAK0D,eAAL,CAAqB1D,KAArB,EAA4B2D,MAA5B,EADD,KAEK;AACJ,UAAGA,MAAM,KAAK,OAAd,EACC,KAAK/B,QAAL,CAAc;AAAEX,QAAAA,iBAAiB,EAAE;AAArB,OAAd,EADD,KAGC,KAAKW,QAAL,CAAc;AAAET,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA;AACD,GAnP0B,CAqP3B;;;AACAyC,EAAAA,qBAAqB,CAACP,MAAD,EAASQ,IAAT,EAAe;AACnC,QAAGA,IAAI,KAAK,QAAZ,EACC,OAAOR,MAAM,CAACS,IAAd;AACD,QAAGT,MAAM,CAACnE,KAAV,EACC,OAAQ,GAAEmE,MAAM,CAACnE,KAAM,gBAAemE,MAAM,CAACS,IAAK,eAAcT,MAAM,CAACU,UAAW,GAAlF,CADD,KAGC,OAAQ,GAAEV,MAAM,CAACS,IAAK,YAAtB;AACD,GA7P0B,CA+P3B;;;AACAE,EAAAA,2BAA2B,CAACR,CAAD,EAAIS,KAAJ,EAAWJ,IAAX,EAAiB;AAC3C;AACA,UAAMK,SAAS,GAAGV,CAAC,CAACC,MAAF,CAASU,WAA3B;;AACA,QAAGD,SAAH,EAAc;AACb,UAAG,CAACL,IAAJ,EAAU;AACT,YAAIO,KAAK,GAAGF,SAAS,CAACE,KAAV,CAAgB,GAAhB,CAAZ;AACA,YAAIxE,KAAK,GAAGwE,KAAK,CAAC,CAAD,CAAL,CAAS7C,IAAT,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAElB,UAAAA,SAAS,EAAEV;AAAb,SAAd;AACA,YAAGwE,KAAK,CAAC,CAAD,CAAL,KAAa,UAAhB,EACClD,OAAO,CAACC,GAAR,CAAY,gCAAgCvB,KAA5C,EADD,KAGCsB,OAAO,CAACC,GAAR,CAAY,6BAA6BvB,KAAzC;AACD,OARD,MASK;AACJ,YAAIA,KAAK,GAAG4D,CAAC,CAACC,MAAF,CAASU,WAArB;;AACA,gBAAOF,KAAP;AACC,eAAK,SAAL;AACC,iBAAKzC,QAAL,CAAc;AAAEhB,cAAAA,aAAa,EAAEZ;AAAjB,aAAd;AACA;;AACD,eAAK,SAAL;AACC,iBAAK4B,QAAL,CAAc;AAAEd,cAAAA,aAAa,EAAEd;AAAjB,aAAd;AACA;;AACD,eAAK,OAAL;AACC,iBAAK4B,QAAL,CAAc;AAAEZ,cAAAA,WAAW,EAAEhB;AAAf,aAAd;AACA;;AACD,eAAK,OAAL;AACC,iBAAK4B,QAAL,CAAc;AAAEV,cAAAA,WAAW,EAAElB;AAAf,aAAd;AACA;;AACD;AAbD;;AAeA,YAAGiE,IAAI,KAAK,QAAZ,EACC3C,OAAO,CAACC,GAAR,CAAY,gCAAgCvB,KAA5C,EADD,KAEK,IAAGiE,IAAI,KAAK,MAAZ,EACJ3C,OAAO,CAACC,GAAR,CAAY,6BAA6BvB,KAAzC;AACD;AACD,KAhCD,MAgCO;AACN,cAAOqE,KAAP;AACC,aAAK,SAAL;AACC,eAAKzC,QAAL,CAAc;AAAEhB,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACA,eAAKgB,QAAL,CAAc;AAAEf,YAAAA,mBAAmB,EAAE;AAAvB,WAAd;AACA;;AACD,aAAK,SAAL;AACC,eAAKe,QAAL,CAAc;AAAEd,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACA,eAAKc,QAAL,CAAc;AAAEb,YAAAA,mBAAmB,EAAE;AAAvB,WAAd;AACA;;AACD,aAAK,OAAL;AACC,eAAKa,QAAL,CAAc;AAAEZ,YAAAA,WAAW,EAAE;AAAf,WAAd;AACA,eAAKY,QAAL,CAAc;AAAEX,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACA;;AACD,aAAK,OAAL;AACC,eAAKW,QAAL,CAAc;AAAEV,YAAAA,WAAW,EAAE;AAAf,WAAd;AACA,eAAKU,QAAL,CAAc;AAAET,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACA;;AACD;AACC,eAAKS,QAAL,CAAc;AAAElB,YAAAA,SAAS,EAAE;AAAb,WAAd;AACA,eAAKkB,QAAL,CAAc;AAAEjB,YAAAA,eAAe,EAAE;AAAnB,WAAd;AAnBF;AAqBA;AACD,GA1T0B,CA4T3B;;;AAEA8D,EAAAA,MAAM,GAAG;AAAA,UACAC,OADA,GACY,KAAK/E,KADjB,CACA+E,OADA;AAGR,WACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAG;AAAX,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAED,OAAO,CAACpF,KAA/B;AAAsC,MAAA,OAAO,EAAC,IAA9C;AAAmD,MAAA,MAAM,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,CADD,CAFD,EAUC,oBAAC,MAAD;AACC,MAAA,OAAO,EAAC,UADT;AAEC,MAAA,OAAO,EAAG,KAAK+B,QAAL,CAAcuD,IAAd,CAAmB,IAAnB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVD,EAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADD,EAEC,oBAAC,YAAD;AACC,MAAA,QAAQ,MADT;AAEC,MAAA,OAAO,EAAG,KAAKhF,KAAL,CAAWe,eAAX,CAA2BkE,GAA3B,CAA+BpB,MAAM,IAAI,KAAKO,qBAAL,CAA2BP,MAA3B,CAAzC,CAFX;AAGC,MAAA,aAAa,EAAGqB,OAAO,IAAI;AAAE,eAAOA,OAAP;AAAgB,OAH9C;AAIC,MAAA,QAAQ,EAAGlB,CAAC,IAAI,KAAKQ,2BAAL,CAAiCR,CAAjC,CAJjB;AAKC,MAAA,WAAW,EAAGmB,MAAM,IACnB,oBAAC,SAAD;AACC,QAAA,EAAE,EAAC;AADJ,SAEKA,MAFL;AAGC,QAAA,QAAQ,EAAIrD,KAAD,IAAW,KAAKA,KAAL,GAAaA,KAHpC;AAIC,QAAA,KAAK,EAAG;AAAEsD,UAAAA,KAAK,EAAG;AAAV,SAJT;AAKC,QAAA,KAAK,EAAC,WALP;AAMC,QAAA,MAAM,EAAC,QANR;AAOC,QAAA,OAAO,EAAC,UAPT;AAQC,QAAA,QAAQ,EAAGpB,CAAC,IAAI,KAAKlD,SAAL,CAAekD,CAAf,CARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAhBD,EAsCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,EAEC,oBAAC,YAAD;AACC,MAAA,QAAQ,MADT;AAEC,MAAA,OAAO,EAAG,KAAKhE,KAAL,CAAWiB,mBAAX,CAA+BgE,GAA/B,CAAmCpB,MAAM,IAAI,KAAKO,qBAAL,CAA2BP,MAA3B,EAAmC,QAAnC,CAA7C,CAFX;AAGC,MAAA,aAAa,EAAGqB,OAAO,IAAI;AAAE,eAAOA,OAAP;AAAgB,OAH9C;AAIC,MAAA,QAAQ,EAAGlB,CAAC,IAAI,KAAKQ,2BAAL,CAAiCR,CAAjC,EAAoC,SAApC,EAA+C,QAA/C,CAJjB;AAKC,MAAA,WAAW,EAAGmB,MAAM,IACnB,oBAAC,SAAD;AACC,QAAA,EAAE,EAAC;AADJ,SAEKA,MAFL;AAGC,QAAA,QAAQ,EAAIrD,KAAD,IAAW,KAAKA,KAAL,GAAaA,KAHpC;AAIC,QAAA,KAAK,EAAG;AAAEsD,UAAAA,KAAK,EAAG;AAAV,SAJT;AAKC,QAAA,KAAK,EAAC,YALP;AAMC,QAAA,MAAM,EAAC,QANR;AAOC,QAAA,OAAO,EAAC,UAPT;AAQC,QAAA,QAAQ,EAAGpB,CAAC,IAAI,KAAKE,YAAL,CAAkBF,CAAlB,EAAqB,SAArB,CARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAoBC,oBAAC,YAAD;AACC,MAAA,QAAQ,MADT;AAEC,MAAA,OAAO,EAAG,KAAKhE,KAAL,CAAWmB,mBAAX,CAA+B8D,GAA/B,CAAmCpB,MAAM,IAAI,KAAKO,qBAAL,CAA2BP,MAA3B,EAAmC,QAAnC,CAA7C,CAFX;AAGC,MAAA,aAAa,EAAGqB,OAAO,IAAI;AAAE,eAAOA,OAAP;AAAgB,OAH9C;AAIC,MAAA,QAAQ,EAAGlB,CAAC,IAAI,KAAKQ,2BAAL,CAAiCR,CAAjC,EAAoC,SAApC,EAA+C,QAA/C,CAJjB;AAKC,MAAA,WAAW,EAAGmB,MAAM,IACnB,oBAAC,SAAD;AACC,QAAA,EAAE,EAAC;AADJ,SAEKA,MAFL;AAGC,QAAA,QAAQ,EAAIrD,KAAD,IAAW,KAAKA,KAAL,GAAaA,KAHpC;AAIC,QAAA,KAAK,EAAG;AAAEsD,UAAAA,KAAK,EAAG;AAAV,SAJT;AAKC,QAAA,KAAK,EAAC,YALP;AAMC,QAAA,MAAM,EAAC,QANR;AAOC,QAAA,OAAO,EAAC,UAPT;AAQC,QAAA,QAAQ,EAAGpB,CAAC,IAAI,KAAKE,YAAL,CAAkBF,CAAlB,EAAqB,SAArB,CARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBD,EAsCC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCD,CAtCD,EA+EC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,EAEC,oBAAC,YAAD;AACC,MAAA,QAAQ,MADT;AAEC,MAAA,OAAO,EAAG,KAAKhE,KAAL,CAAWqB,iBAAX,CAA6B4D,GAA7B,CAAiCpB,MAAM,IAAI,KAAKO,qBAAL,CAA2BP,MAA3B,EAAmC,MAAnC,CAA3C,CAFX;AAGC,MAAA,aAAa,EAAGqB,OAAO,IAAI;AAAE,eAAOA,OAAP;AAAgB,OAH9C;AAIC,MAAA,QAAQ,EAAGlB,CAAC,IAAI,KAAKQ,2BAAL,CAAiCR,CAAjC,EAAoC,OAApC,EAA6C,MAA7C,CAJjB;AAKC,MAAA,WAAW,EAAGmB,MAAM,IACnB,oBAAC,SAAD;AACC,QAAA,EAAE,EAAC;AADJ,SAEKA,MAFL;AAGC,QAAA,QAAQ,EAAIrD,KAAD,IAAW,KAAKA,KAAL,GAAaA,KAHpC;AAIC,QAAA,KAAK,EAAG;AAAEsD,UAAAA,KAAK,EAAG;AAAV,SAJT;AAKC,QAAA,KAAK,EAAC,YALP;AAMC,QAAA,MAAM,EAAC,QANR;AAOC,QAAA,OAAO,EAAC,UAPT;AAQC,QAAA,QAAQ,EAAGpB,CAAC,IAAI,KAAKG,UAAL,CAAgBH,CAAhB,EAAmB,OAAnB,CARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAoBC,oBAAC,YAAD;AACC,MAAA,QAAQ,MADT;AAEC,MAAA,OAAO,EAAG,KAAKhE,KAAL,CAAWuB,iBAAX,CAA6B0D,GAA7B,CAAiCpB,MAAM,IAAI,KAAKO,qBAAL,CAA2BP,MAA3B,EAAmC,MAAnC,CAA3C,CAFX;AAGC,MAAA,aAAa,EAAGqB,OAAO,IAAI;AAAE,eAAOA,OAAP;AAAgB,OAH9C;AAIC,MAAA,QAAQ,EAAGlB,CAAC,IAAI,KAAKQ,2BAAL,CAAiCR,CAAjC,EAAoC,OAApC,EAA6C,MAA7C,CAJjB;AAKC,MAAA,WAAW,EAAGmB,MAAM,IACnB,oBAAC,SAAD;AACC,QAAA,EAAE,EAAC;AADJ,SAEKA,MAFL;AAGC,QAAA,QAAQ,EAAIrD,KAAD,IAAW,KAAKA,KAAL,GAAaA,KAHpC;AAIC,QAAA,KAAK,EAAG;AAAEsD,UAAAA,KAAK,EAAG;AAAV,SAJT;AAKC,QAAA,KAAK,EAAC,YALP;AAMC,QAAA,MAAM,EAAC,QANR;AAOC,QAAA,OAAO,EAAC,UAPT;AAQC,QAAA,QAAQ,EAAGpB,CAAC,IAAI,KAAKG,UAAL,CAAgBH,CAAhB,EAAmB,OAAnB,CARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBD,EAsCC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCD,CA/ED,CADD;AA2HA;;AA5b0B;;AA+b5B,eAAejF,UAAU,CAACS,MAAD,CAAV,CAAmBK,GAAnB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { TextField, Button, AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsiveBubble } from '@nivo/circle-packing'\n\nimport './App.css'\n\n/////////////////////////////////////////\n\nconst styles = theme => ({\n\ttitle: {},\n\tbutton: {\n\t\tmargin: 50\n\t}\n})\n\n/////////////////////////////////////////\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\n\t\t\ttopGenres: [],\n\n\t\t\tsearch: {\n\t\t\t\tall: {\n\t\t\t\t\tvalue: \"\",\n\t\t\t\t\tresult: []\n\t\t\t\t},\n\t\t\t\tartist: {\n\t\t\t\t\tvalue1: \"\",\n\t\t\t\t\tresult1: [],\n\t\t\t\t\tvalue2: \"\",\n\t\t\t\t\tresult2: []\n\t\t\t\t},\n\t\t\t\tsong: {\n\t\t\t\t\tvalues: [\"\"],\n\t\t\t\t\tresults: [[]]\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsearchAll: \"\",\n\t\t\tsearchAllResult: [],\n\n\t\t\tsearchArtist1: \"\",\n\t\t\tsearchArtist1Result: [],\n\n\t\t\tsearchArtist2: \"\",\n\t\t\tsearchArtist2Result: [],\n\t\t\t\n\t\t\tsearchSong1: \"\",\n\t\t\tsearchSong1Result: [],\n\n\t\t\tsearchSong2: \"\",\n\t\t\tsearchSong2Result: [],\n\t\t}\n\t}\n\n\t/////////////////////////////////////////\n\n\tcomponentDidMount() {\n\t\t//this.getGenrePopularity(10);\n\t}\n\n\tgetState() {\n\t\tconsole.log(this.state)\n\t}\n\n\tsearchArtistData() {\n\t\tconst searchedArtist = this.input.value.trim()\n\t\tthis.setState({ artist: searchedArtist })\n\n\t\tconst request = `https://wasabi.i3s.unice.fr/api/v1/artist/name/${encodeURI(searchedArtist)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ artistData: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ artistData: {} })\n\t\t\t\tconsole.log(this.state.artistData)\n\t\t\t})\n\t}\n\n\tgetGenrePopularity(limit) {\n\t\tlet request = `https://wasabi.i3s.unice.fr/api/v1/artist/genres/popularity`\n\t\tif(limit)\n\t\t\trequest += `?limit=${limit}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ topGenres: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ topGenres: {} })\n\t\t\t\tconsole.log(this.state.topGenres)\n\t\t\t})\n\t\t\n\t\tconst chartData = this.state.topGenres\n\t\tconst bubbles = {\n\t\t\t_id: \"Genres\",\n\t\t\tchildren: this.state.topGenres\n\t\t}\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<ResponsiveBar\n\t\t\t\t\tdata={chartData}\n\t\t\t\t\tindexBy=\"_id\"\n\t\t\t\t\tkeys={[ 'sum' ]}\n\t\t\t\t\tlayout=\"horizontal\"\n\t\t\t\t\tmargin={{ top: 50, right: 50, bottom: 50, left: 150 }}\n\t\t\t\t\tcolors={{ scheme: 'category10' }}\n\t\t\t\t\tborderRadius={10}\n\t\t\t\t\tenableGridY={false}\n\t\t\t\t\taxisBottom={null}\n\t\t\t\t\taxisLeft={{\n\t\t\t\t\t\ttickSize: 0,\n\t\t\t\t\t\ttickPadding: 10\n\t\t\t\t\t}}\n\t\t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n\t\t\t\t\tisInteractive={false}\n\t\t\t\t/>\n\t\t\t\t<ResponsiveBubble\n\t\t\t\t\troot={bubbles}\n\t\t\t\t\tidentity=\"_id\"\n\t\t\t\t\tvalue=\"sum\"\n\t\t\t\t\tleavesOnly={true}\n\t\t\t\t\tpadding={5}\n\t\t\t\t\tmargin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n\t\t\t\t\tcolors={{ scheme: 'paired' }}\n\t\t\t\t\tcolorBy='name'\n\t\t\t\t\tlabelTextColor={{ from: 'color', modifiers: [ [ 'darker', '2' ] ] }}\n\t\t\t\t\tlabelSkipRadius={0}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t/////////////////////////////////////////\n\n\t// Requête sur l'API Wasabi : recherche d'artistes et chansons\n\tgetArtistOrSongBySearch(search) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif(data != null)\n\t\t\t\t\tthis.setState({ searchAllResult: data })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchAllResult: [] })\n\t\t\t\tconsole.log(this.state.searchAllResult)\n\t\t\t})\n\t}\n\n\t// Requête sur l'API Wasabi : recherche d'artistes\n\tgetArtistBySearch(search, artistId) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tlet searchResult\n\t\t\t\tif(data != null)\n\t\t\t\t\tsearchResult = data.filter(option => !option.title)\n\t\t\t\telse\n\t\t\t\t\tsearchResult = []\n\t\t\t\tif(artistId === \"artist1\")\n\t\t\t\t\tthis.setState({ searchArtist1Result: searchResult })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchArtist2Result: searchResult })\n\t\t\t})\n\t}\n\n\t// Requête sur l'API Wasabi : recherche de chansons\n\tgetSongBySearch(search, songId) {\n\t\tconst request = `https://wasabi.i3s.unice.fr/search/fulltext/${encodeURI(search)}`\n\t\tconsole.log(request)\n\n\t\tfetch(request)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tlet searchResult\n\t\t\t\tif(data != null)\n\t\t\t\t\tsearchResult = data.filter(option => option.title)\n\t\t\t\telse\n\t\t\t\t\tsearchResult = []\n\t\t\t\tif(songId === \"song1\")\n\t\t\t\t\tthis.setState({ searchSong1Result: searchResult })\n\t\t\t\telse\n\t\t\t\t\tthis.setState({ searchSong2Result: searchResult })\n\t\t\t})\n\t}\n\n\t// Handler de la recherche d'artiste ou chanson (TextField onChange)\n\tsearchAll(e) {\n\t\tconst value = e.target.value.trim()\n\t\tthis.setState({ searchAll: value })\n\t\tconsole.log(\"Search: \" + value)\n\t\tif(value)\n\t\t\tthis.getArtistOrSongBySearch(value)\n\t\telse\n\t\t\tthis.setState({ searchAllResult: [] })\n\t}\n\n\t// Handler de la recherche d'artiste (TextField onChange)\n\tsearchArtist(e, artistId) {\n\t\tconst value = e.target.value.trim()\n\t\tif(artistId === \"artist1\")\n\t\t\tthis.setState({ searchArtist1: value })\n\t\telse\n\t\t\tthis.setState({ searchArtist2: value })\n\t\tconsole.log(\"Search (\" + artistId + \"): \" + value)\n\t\tif(value)\n\t\t\tthis.getArtistBySearch(value, artistId)\n\t\telse {\n\t\t\tif(artistId === \"artist1\")\n\t\t\t\tthis.setState({ searchArtist1Result: [] })\n\t\t\telse\n\t\t\t\tthis.setState({ searchArtist2Result: [] })\n\t\t\tconsole.log(\"[]\")\n\t\t}\n\t}\n\n\t// Handler de la recherche de chanson (TextField onChange)\n\tsearchSong(e, songId) {\n\t\tconst value = e.target.value.trim()\n\t\tif(songId === \"song1\")\n\t\t\tthis.setState({ searchSong1: value })\n\t\telse\n\t\t\tthis.setState({ searchSong2: value })\n\t\tconsole.log(\"Search (\" + songId + \"): \" + value)\n\t\tif(value)\n\t\t\tthis.getSongBySearch(value, songId)\n\t\telse {\n\t\t\tif(songId === \"song1\")\n\t\t\t\tthis.setState({ searchSong1Result: [] })\n\t\t\telse\n\t\t\t\tthis.setState({ searchSong2Result: [] })\n\t\t\tconsole.log(\"[]\")\n\t\t}\n\t}\n\n\t// Gère l'affichage d'un élément suggéré (en paramètre)\n\tsearchOptionRendering(option, type) {\n\t\tif(type === \"artist\")\n\t\t\treturn option.name\n\t\tif(option.title)\n\t\t\treturn `${option.title} (chanson de ${option.name} de l'album ${option.albumTitle})`\n\t\telse\n\t\t\treturn `${option.name} (artiste)`\n\t}\n\n\t// Handler de la sélection d'un élément suggéré\n\thandleSearchOptionSelection(e, field, type) {\n\t\t//console.log(e.target)\n\t\tconst selection = e.target.textContent\n\t\tif(selection) {\n\t\t\tif(!type) {\n\t\t\t\tlet split = selection.split(\"(\")\n\t\t\t\tlet value = split[0].trim()\n\t\t\t\tthis.setState({ searchAll: value })\n\t\t\t\tif(split[1] === \"artiste)\")\n\t\t\t\t\tconsole.log(\"You've searched an artist: \" + value)\n\t\t\t\telse\n\t\t\t\t\tconsole.log(\"You've searched a song: \" + value)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet value = e.target.textContent\n\t\t\t\tswitch(field) {\n\t\t\t\t\tcase \"artist1\":\n\t\t\t\t\t\tthis.setState({ searchArtist1: value })\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"artist2\":\n\t\t\t\t\t\tthis.setState({ searchArtist2: value })\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"song1\":\n\t\t\t\t\t\tthis.setState({ searchSong1: value })\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase \"song2\":\n\t\t\t\t\t\tthis.setState({ searchSong2: value })\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t\tif(type === \"artist\")\n\t\t\t\t\tconsole.log(\"You've searched an artist: \" + value)\n\t\t\t\telse if(type === \"song\")\n\t\t\t\t\tconsole.log(\"You've searched a song: \" + value)\n\t\t\t}\n\t\t} else {\n\t\t\tswitch(field) {\n\t\t\t\tcase \"artist1\":\n\t\t\t\t\tthis.setState({ searchArtist1: \"\" })\n\t\t\t\t\tthis.setState({ searchArtist1Result: [] })\n\t\t\t\t\tbreak\n\t\t\t\tcase \"artist2\":\n\t\t\t\t\tthis.setState({ searchArtist2: \"\" })\n\t\t\t\t\tthis.setState({ searchArtist2Result: [] })\n\t\t\t\t\tbreak\n\t\t\t\tcase \"song1\":\n\t\t\t\t\tthis.setState({ searchSong1: \"\" })\n\t\t\t\t\tthis.setState({ searchSong1Result: [] })\n\t\t\t\t\tbreak\n\t\t\t\tcase \"song2\":\n\t\t\t\t\tthis.setState({ searchSong2: \"\" })\n\t\t\t\t\tthis.setState({ searchSong2Result: [] })\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthis.setState({ searchAll: \"\" })\n\t\t\t\t\tthis.setState({ searchAllResult: [] })\n\t\t\t}\n\t\t}\n\t}\n\n\t/////////////////////////////////////////\n\t\n\trender() {\n\t\tconst { classes } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"App\" style={{ height : '500px' }}>\n\t\t\t\t\n\t\t\t\t<AppBar position=\"static\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\n\t\t\t\t\t\t\tMaterial-UI\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t\n\t\t\t\t<Button \n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tonClick={ this.getState.bind(this) }>\n\t\t\t\t\t\tGet state\n\t\t\t\t</Button>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Chercher un artiste ou une chanson</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchAllResult.map(option => this.searchOptionRendering(option)) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e) }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"searchAllTextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Recherche\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchAll(e) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Comparer deux artistes</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchArtist1Result.map(option => this.searchOptionRendering(option, \"artist\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"artist1\", \"artist\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"artist1TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Artiste #1\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchArtist(e, \"artist1\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchArtist2Result.map(option => this.searchOptionRendering(option, \"artist\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"artist2\", \"artist\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"artist2TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Artiste #2\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchArtist(e, \"artist2\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button variant=\"outlined\">Comparer</Button>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Comparer deux chansons</h3>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchSong1Result.map(option => this.searchOptionRendering(option, \"song\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"song1\", \"song\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"song1TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Chanson #1\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchSong(e, \"song1\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\toptions={ this.state.searchSong2Result.map(option => this.searchOptionRendering(option, \"song\")) }\n\t\t\t\t\t\tfilterOptions={ options => { return options } }\n\t\t\t\t\t\tonChange={ e => this.handleSearchOptionSelection(e, \"song2\", \"song\") }\n\t\t\t\t\t\trenderInput={ params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"song2TextField\"\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tinputRef={ (input) => this.input = input }\n\t\t\t\t\t\t\t\tstyle={ { width : '300px' } }\n\t\t\t\t\t\t\t\tlabel=\"Chanson #2\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tonChange={ e => this.searchSong(e, \"song2\") }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button variant=\"outlined\">Comparer</Button>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withStyles(styles)(App)"]},"metadata":{},"sourceType":"module"}