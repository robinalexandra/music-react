{"ast":null,"code":"var _jsxFileName = \"/Users/robina/Documents/MIAGE/React/restaurants/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { withStyles, fade } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    marginTop: theme.spacing(5)\n  },\n  tableTitle: {\n    padding: theme.spacing(2)\n  }\n});\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      restaurantList: [],\n      page: 1,\n      rowsPerPage: 10\n    };\n\n    this.getRestaurantData = async () => {\n      const _this$state = this.state,\n            page = _this$state.page,\n            rowsPerPage = _this$state.rowsPerPage;\n      const response = await fetch(\"http://localhost:8080/api/restaurants?page=\".concat(page, \"&pagesize=\").concat(rowsPerPage));\n\n      const _ref = await response.json(),\n            data = _ref.data;\n\n      this.setState({\n        restaurantList: data\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        page: 1,\n        rowsPerPage: +event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getRestaurantData();\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.page !== prevState.page || this.state.rowsPerPage !== prevState.rowsPerPage) {\n      this.getRestaurantData();\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      color: \"primary\",\n      className: classes.tableTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Restaurants\"), React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Cuisine\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Borough\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Address\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.restaurantList.map((restaurant, key) => React.createElement(TableRow, {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, restaurant.name), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, restaurant.cuisine), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, restaurant.borough), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, restaurant.address.building, \" \", restaurant.address.street, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \"New York, NY \", restaurant.address.zipcode))))), React.createElement(TablePagination, {\n      page: this.state.page,\n      rowsPerPage: this.state.rowsPerPage,\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/robina/Documents/MIAGE/React/restaurants/src/App.js"],"names":["React","withStyles","fade","Table","TableBody","TableCell","TableHead","TableRow","Typography","Paper","Container","TablePagination","styles","theme","root","flexGrow","container","marginTop","spacing","tableTitle","padding","App","Component","state","restaurantList","page","rowsPerPage","getRestaurantData","response","fetch","json","data","setState","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","componentDidMount","componentDidUpdate","prevState","render","classes","props","map","restaurant","key","name","cuisine","borough","address","building","street","zipcode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { withStyles, fade } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nconst styles = theme => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tcontainer: {\n\t\tmarginTop: theme.spacing(5),\n\t},\n\ttableTitle: {\n\t\tpadding: theme.spacing(2),\n\t},\n});\n\nclass App extends React.Component {\n\n\tstate = {\n\t\trestaurantList: [],\n\t\tpage: 1,\n\t\trowsPerPage: 10,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getRestaurantData();\n\t}\n\n\tcomponentDidUpdate(prevState) {\n\t\tif(this.state.page !== prevState.page || this.state.rowsPerPage !== prevState.rowsPerPage) {\n\t\t\tthis.getRestaurantData();\n\t\t}\n\t}\n\n\tgetRestaurantData = async () => {\n\t\tconst { page, rowsPerPage } = this.state;\n\t\tconst response = await fetch(`http://localhost:8080/api/restaurants?page=${page}&pagesize=${rowsPerPage}`);\n\t\tconst { data } = await response.json();\n\t\tthis.setState({ restaurantList : data })\n\t}\n\n\thandleChangePage = (event, newPage) => {\n\t\tthis.setState({page : newPage});\n\t};\n\n\thandleChangeRowsPerPage = event => {\n\t\tthis.setState({page: 1, rowsPerPage: +event.target.value});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Container className={classes.container}>\n\t\t\t\t\t<Paper>\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h6\" color=\"primary\" className={classes.tableTitle}>Restaurants</Typography>\n\t\t\t\t\t\t<Table aria-label=\"simple table\">\n\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<TableCell>Name</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Cuisine</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Borough</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>Address</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{this.state.restaurantList.map((restaurant, key) => (\n\t\t\t\t\t\t\t\t\t<TableRow key={key}>\n\t\t\t\t\t\t\t\t\t<TableCell>{restaurant.name}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{restaurant.cuisine}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{restaurant.borough}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{restaurant.address.building} {restaurant.address.street}<br />New York, NY {restaurant.address.zipcode}</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t<TablePagination\n\t\t\t\t\t\t\tpage={this.state.page}\n\t\t\t\t\t\t\trowsPerPage={this.state.rowsPerPage}\n\t\t\t\t\t\t\tonChangePage={this.handleChangePage}\n\t\t\t\t\t\t\tonChangeRowsPerPage={this.handleChangeRowsPerPage}>\n\t\t\t\t\t\t</TablePagination>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\n\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}